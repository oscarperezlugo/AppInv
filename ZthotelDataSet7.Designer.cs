//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AppInv {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ZthotelDataSet7")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ZthotelDataSet7 : global::System.Data.DataSet {
        
        private EmpresasDataTable tableEmpresas;
        
        private InventariosDataTable tableInventarios;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ZthotelDataSet7() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ZthotelDataSet7(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Empresas"] != null)) {
                    base.Tables.Add(new EmpresasDataTable(ds.Tables["Empresas"]));
                }
                if ((ds.Tables["Inventarios"] != null)) {
                    base.Tables.Add(new InventariosDataTable(ds.Tables["Inventarios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmpresasDataTable Empresas {
            get {
                return this.tableEmpresas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InventariosDataTable Inventarios {
            get {
                return this.tableInventarios;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ZthotelDataSet7 cln = ((ZthotelDataSet7)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Empresas"] != null)) {
                    base.Tables.Add(new EmpresasDataTable(ds.Tables["Empresas"]));
                }
                if ((ds.Tables["Inventarios"] != null)) {
                    base.Tables.Add(new InventariosDataTable(ds.Tables["Inventarios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEmpresas = ((EmpresasDataTable)(base.Tables["Empresas"]));
            if ((initTable == true)) {
                if ((this.tableEmpresas != null)) {
                    this.tableEmpresas.InitVars();
                }
            }
            this.tableInventarios = ((InventariosDataTable)(base.Tables["Inventarios"]));
            if ((initTable == true)) {
                if ((this.tableInventarios != null)) {
                    this.tableInventarios.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ZthotelDataSet7";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ZthotelDataSet7.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEmpresas = new EmpresasDataTable();
            base.Tables.Add(this.tableEmpresas);
            this.tableInventarios = new InventariosDataTable();
            base.Tables.Add(this.tableInventarios);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEmpresas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInventarios() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ZthotelDataSet7 ds = new ZthotelDataSet7();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EmpresasRowChangeEventHandler(object sender, EmpresasRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InventariosRowChangeEventHandler(object sender, InventariosRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmpresasDataTable : global::System.Data.TypedTableBase<EmpresasRow> {
            
            private global::System.Data.DataColumn columnCodigoEmpresa;
            
            private global::System.Data.DataColumn columnTipoEmpresa;
            
            private global::System.Data.DataColumn columnMarcaEmpresaPersona;
            
            private global::System.Data.DataColumn columnEmpresa;
            
            private global::System.Data.DataColumn columnNombrePersona;
            
            private global::System.Data.DataColumn columnPrimerApellido;
            
            private global::System.Data.DataColumn columnSegundoApellido;
            
            private global::System.Data.DataColumn columnAnagrama;
            
            private global::System.Data.DataColumn columnSiglaNacion;
            
            private global::System.Data.DataColumn columnCifDni;
            
            private global::System.Data.DataColumn columnCifEuropeo;
            
            private global::System.Data.DataColumn columnCifEspanol;
            
            private global::System.Data.DataColumn columnFechaAlta;
            
            private global::System.Data.DataColumn columnFechaBaja;
            
            private global::System.Data.DataColumn columnCodigoTerritorio;
            
            private global::System.Data.DataColumn columnCodigoMonedaBase;
            
            private global::System.Data.DataColumn columnCodigoMonedaBaseAnterior;
            
            private global::System.Data.DataColumn columnCodigoBanco;
            
            private global::System.Data.DataColumn columnCodigoOficina;
            
            private global::System.Data.DataColumn columnDC;
            
            private global::System.Data.DataColumn columnCCC;
            
            private global::System.Data.DataColumn columnIBAN;
            
            private global::System.Data.DataColumn columnMarcaAdeudo;
            
            private global::System.Data.DataColumn columnLetrasEtiqueta;
            
            private global::System.Data.DataColumn columnTipoRegistroPublico;
            
            private global::System.Data.DataColumn columnRegistroMercantil;
            
            private global::System.Data.DataColumn columnNumTomo;
            
            private global::System.Data.DataColumn columnNumLibro;
            
            private global::System.Data.DataColumn columnNumSeccion;
            
            private global::System.Data.DataColumn columnNumFolio;
            
            private global::System.Data.DataColumn columnNumHojaLibro;
            
            private global::System.Data.DataColumn columnNumInscripcion;
            
            private global::System.Data.DataColumn _column_ProrrataGeneral;
            
            private global::System.Data.DataColumn columnReferenciaEdi_;
            
            private global::System.Data.DataColumn columnIdTipoPersona;
            
            private global::System.Data.DataColumn columnSociedadMercantil;
            
            private global::System.Data.DataColumn columnEmpresaEstimaciones;
            
            private global::System.Data.DataColumn columnTipoEmpresaSinc;
            
            private global::System.Data.DataColumn columnSincronizacion;
            
            private global::System.Data.DataColumn columnTipoRegistroNum;
            
            private global::System.Data.DataColumn columnCodigoRegistroMercantil;
            
            private global::System.Data.DataColumn columnIdEmpresa;
            
            private global::System.Data.DataColumn columnCodigoLEI;
            
            private global::System.Data.DataColumn columnSectoresDiferenciados;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasDataTable() {
                this.TableName = "Empresas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EmpresasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EmpresasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoEmpresaColumn {
                get {
                    return this.columnCodigoEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoEmpresaColumn {
                get {
                    return this.columnTipoEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MarcaEmpresaPersonaColumn {
                get {
                    return this.columnMarcaEmpresaPersona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NombrePersonaColumn {
                get {
                    return this.columnNombrePersona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrimerApellidoColumn {
                get {
                    return this.columnPrimerApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SegundoApellidoColumn {
                get {
                    return this.columnSegundoApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AnagramaColumn {
                get {
                    return this.columnAnagrama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SiglaNacionColumn {
                get {
                    return this.columnSiglaNacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CifDniColumn {
                get {
                    return this.columnCifDni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CifEuropeoColumn {
                get {
                    return this.columnCifEuropeo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CifEspanolColumn {
                get {
                    return this.columnCifEspanol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaAltaColumn {
                get {
                    return this.columnFechaAlta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaBajaColumn {
                get {
                    return this.columnFechaBaja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoTerritorioColumn {
                get {
                    return this.columnCodigoTerritorio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoMonedaBaseColumn {
                get {
                    return this.columnCodigoMonedaBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoMonedaBaseAnteriorColumn {
                get {
                    return this.columnCodigoMonedaBaseAnterior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoBancoColumn {
                get {
                    return this.columnCodigoBanco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoOficinaColumn {
                get {
                    return this.columnCodigoOficina;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DCColumn {
                get {
                    return this.columnDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CCCColumn {
                get {
                    return this.columnCCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IBANColumn {
                get {
                    return this.columnIBAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MarcaAdeudoColumn {
                get {
                    return this.columnMarcaAdeudo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LetrasEtiquetaColumn {
                get {
                    return this.columnLetrasEtiqueta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoRegistroPublicoColumn {
                get {
                    return this.columnTipoRegistroPublico;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegistroMercantilColumn {
                get {
                    return this.columnRegistroMercantil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumTomoColumn {
                get {
                    return this.columnNumTomo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumLibroColumn {
                get {
                    return this.columnNumLibro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumSeccionColumn {
                get {
                    return this.columnNumSeccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumFolioColumn {
                get {
                    return this.columnNumFolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumHojaLibroColumn {
                get {
                    return this.columnNumHojaLibro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumInscripcionColumn {
                get {
                    return this.columnNumInscripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn @__ProrrataGeneralColumn {
                get {
                    return this._column_ProrrataGeneral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReferenciaEdi_Column {
                get {
                    return this.columnReferenciaEdi_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdTipoPersonaColumn {
                get {
                    return this.columnIdTipoPersona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SociedadMercantilColumn {
                get {
                    return this.columnSociedadMercantil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmpresaEstimacionesColumn {
                get {
                    return this.columnEmpresaEstimaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoEmpresaSincColumn {
                get {
                    return this.columnTipoEmpresaSinc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SincronizacionColumn {
                get {
                    return this.columnSincronizacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoRegistroNumColumn {
                get {
                    return this.columnTipoRegistroNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoRegistroMercantilColumn {
                get {
                    return this.columnCodigoRegistroMercantil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoLEIColumn {
                get {
                    return this.columnCodigoLEI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SectoresDiferenciadosColumn {
                get {
                    return this.columnSectoresDiferenciados;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasRow this[int index] {
                get {
                    return ((EmpresasRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EmpresasRowChangeEventHandler EmpresasRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EmpresasRowChangeEventHandler EmpresasRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EmpresasRowChangeEventHandler EmpresasRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EmpresasRowChangeEventHandler EmpresasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEmpresasRow(EmpresasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasRow AddEmpresasRow(
                        short CodigoEmpresa, 
                        byte TipoEmpresa, 
                        string MarcaEmpresaPersona, 
                        string Empresa, 
                        string NombrePersona, 
                        string PrimerApellido, 
                        string SegundoApellido, 
                        string Anagrama, 
                        string SiglaNacion, 
                        string CifDni, 
                        string CifEuropeo, 
                        string CifEspanol, 
                        System.DateTime FechaAlta, 
                        System.DateTime FechaBaja, 
                        short CodigoTerritorio, 
                        string CodigoMonedaBase, 
                        string CodigoMonedaBaseAnterior, 
                        string CodigoBanco, 
                        string CodigoOficina, 
                        string DC, 
                        string CCC, 
                        string IBAN, 
                        short MarcaAdeudo, 
                        string LetrasEtiqueta, 
                        string TipoRegistroPublico, 
                        string RegistroMercantil, 
                        string NumTomo, 
                        string NumLibro, 
                        string NumSeccion, 
                        string NumFolio, 
                        string NumHojaLibro, 
                        string NumInscripcion, 
                        decimal @__ProrrataGeneral, 
                        string ReferenciaEdi_, 
                        short IdTipoPersona, 
                        short SociedadMercantil, 
                        short EmpresaEstimaciones, 
                        short TipoEmpresaSinc, 
                        short Sincronizacion, 
                        short TipoRegistroNum, 
                        string CodigoRegistroMercantil, 
                        System.Guid IdEmpresa, 
                        string CodigoLEI, 
                        short SectoresDiferenciados) {
                EmpresasRow rowEmpresasRow = ((EmpresasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CodigoEmpresa,
                        TipoEmpresa,
                        MarcaEmpresaPersona,
                        Empresa,
                        NombrePersona,
                        PrimerApellido,
                        SegundoApellido,
                        Anagrama,
                        SiglaNacion,
                        CifDni,
                        CifEuropeo,
                        CifEspanol,
                        FechaAlta,
                        FechaBaja,
                        CodigoTerritorio,
                        CodigoMonedaBase,
                        CodigoMonedaBaseAnterior,
                        CodigoBanco,
                        CodigoOficina,
                        DC,
                        CCC,
                        IBAN,
                        MarcaAdeudo,
                        LetrasEtiqueta,
                        TipoRegistroPublico,
                        RegistroMercantil,
                        NumTomo,
                        NumLibro,
                        NumSeccion,
                        NumFolio,
                        NumHojaLibro,
                        NumInscripcion,
                        @__ProrrataGeneral,
                        ReferenciaEdi_,
                        IdTipoPersona,
                        SociedadMercantil,
                        EmpresaEstimaciones,
                        TipoEmpresaSinc,
                        Sincronizacion,
                        TipoRegistroNum,
                        CodigoRegistroMercantil,
                        IdEmpresa,
                        CodigoLEI,
                        SectoresDiferenciados};
                rowEmpresasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmpresasRow);
                return rowEmpresasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasRow FindByCodigoEmpresa(short CodigoEmpresa) {
                return ((EmpresasRow)(this.Rows.Find(new object[] {
                            CodigoEmpresa})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EmpresasDataTable cln = ((EmpresasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmpresasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCodigoEmpresa = base.Columns["CodigoEmpresa"];
                this.columnTipoEmpresa = base.Columns["TipoEmpresa"];
                this.columnMarcaEmpresaPersona = base.Columns["MarcaEmpresaPersona"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnNombrePersona = base.Columns["NombrePersona"];
                this.columnPrimerApellido = base.Columns["PrimerApellido"];
                this.columnSegundoApellido = base.Columns["SegundoApellido"];
                this.columnAnagrama = base.Columns["Anagrama"];
                this.columnSiglaNacion = base.Columns["SiglaNacion"];
                this.columnCifDni = base.Columns["CifDni"];
                this.columnCifEuropeo = base.Columns["CifEuropeo"];
                this.columnCifEspanol = base.Columns["CifEspanol"];
                this.columnFechaAlta = base.Columns["FechaAlta"];
                this.columnFechaBaja = base.Columns["FechaBaja"];
                this.columnCodigoTerritorio = base.Columns["CodigoTerritorio"];
                this.columnCodigoMonedaBase = base.Columns["CodigoMonedaBase"];
                this.columnCodigoMonedaBaseAnterior = base.Columns["CodigoMonedaBaseAnterior"];
                this.columnCodigoBanco = base.Columns["CodigoBanco"];
                this.columnCodigoOficina = base.Columns["CodigoOficina"];
                this.columnDC = base.Columns["DC"];
                this.columnCCC = base.Columns["CCC"];
                this.columnIBAN = base.Columns["IBAN"];
                this.columnMarcaAdeudo = base.Columns["MarcaAdeudo"];
                this.columnLetrasEtiqueta = base.Columns["LetrasEtiqueta"];
                this.columnTipoRegistroPublico = base.Columns["TipoRegistroPublico"];
                this.columnRegistroMercantil = base.Columns["RegistroMercantil"];
                this.columnNumTomo = base.Columns["NumTomo"];
                this.columnNumLibro = base.Columns["NumLibro"];
                this.columnNumSeccion = base.Columns["NumSeccion"];
                this.columnNumFolio = base.Columns["NumFolio"];
                this.columnNumHojaLibro = base.Columns["NumHojaLibro"];
                this.columnNumInscripcion = base.Columns["NumInscripcion"];
                this._column_ProrrataGeneral = base.Columns["%ProrrataGeneral"];
                this.columnReferenciaEdi_ = base.Columns["ReferenciaEdi_"];
                this.columnIdTipoPersona = base.Columns["IdTipoPersona"];
                this.columnSociedadMercantil = base.Columns["SociedadMercantil"];
                this.columnEmpresaEstimaciones = base.Columns["EmpresaEstimaciones"];
                this.columnTipoEmpresaSinc = base.Columns["TipoEmpresaSinc"];
                this.columnSincronizacion = base.Columns["Sincronizacion"];
                this.columnTipoRegistroNum = base.Columns["TipoRegistroNum"];
                this.columnCodigoRegistroMercantil = base.Columns["CodigoRegistroMercantil"];
                this.columnIdEmpresa = base.Columns["IdEmpresa"];
                this.columnCodigoLEI = base.Columns["CodigoLEI"];
                this.columnSectoresDiferenciados = base.Columns["SectoresDiferenciados"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCodigoEmpresa = new global::System.Data.DataColumn("CodigoEmpresa", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoEmpresa);
                this.columnTipoEmpresa = new global::System.Data.DataColumn("TipoEmpresa", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoEmpresa);
                this.columnMarcaEmpresaPersona = new global::System.Data.DataColumn("MarcaEmpresaPersona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarcaEmpresaPersona);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnNombrePersona = new global::System.Data.DataColumn("NombrePersona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombrePersona);
                this.columnPrimerApellido = new global::System.Data.DataColumn("PrimerApellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimerApellido);
                this.columnSegundoApellido = new global::System.Data.DataColumn("SegundoApellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSegundoApellido);
                this.columnAnagrama = new global::System.Data.DataColumn("Anagrama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnagrama);
                this.columnSiglaNacion = new global::System.Data.DataColumn("SiglaNacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiglaNacion);
                this.columnCifDni = new global::System.Data.DataColumn("CifDni", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCifDni);
                this.columnCifEuropeo = new global::System.Data.DataColumn("CifEuropeo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCifEuropeo);
                this.columnCifEspanol = new global::System.Data.DataColumn("CifEspanol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCifEspanol);
                this.columnFechaAlta = new global::System.Data.DataColumn("FechaAlta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaAlta);
                this.columnFechaBaja = new global::System.Data.DataColumn("FechaBaja", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaBaja);
                this.columnCodigoTerritorio = new global::System.Data.DataColumn("CodigoTerritorio", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoTerritorio);
                this.columnCodigoMonedaBase = new global::System.Data.DataColumn("CodigoMonedaBase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoMonedaBase);
                this.columnCodigoMonedaBaseAnterior = new global::System.Data.DataColumn("CodigoMonedaBaseAnterior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoMonedaBaseAnterior);
                this.columnCodigoBanco = new global::System.Data.DataColumn("CodigoBanco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoBanco);
                this.columnCodigoOficina = new global::System.Data.DataColumn("CodigoOficina", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoOficina);
                this.columnDC = new global::System.Data.DataColumn("DC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDC);
                this.columnCCC = new global::System.Data.DataColumn("CCC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCC);
                this.columnIBAN = new global::System.Data.DataColumn("IBAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIBAN);
                this.columnMarcaAdeudo = new global::System.Data.DataColumn("MarcaAdeudo", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarcaAdeudo);
                this.columnLetrasEtiqueta = new global::System.Data.DataColumn("LetrasEtiqueta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetrasEtiqueta);
                this.columnTipoRegistroPublico = new global::System.Data.DataColumn("TipoRegistroPublico", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoRegistroPublico);
                this.columnRegistroMercantil = new global::System.Data.DataColumn("RegistroMercantil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistroMercantil);
                this.columnNumTomo = new global::System.Data.DataColumn("NumTomo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumTomo);
                this.columnNumLibro = new global::System.Data.DataColumn("NumLibro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLibro);
                this.columnNumSeccion = new global::System.Data.DataColumn("NumSeccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumSeccion);
                this.columnNumFolio = new global::System.Data.DataColumn("NumFolio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumFolio);
                this.columnNumHojaLibro = new global::System.Data.DataColumn("NumHojaLibro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumHojaLibro);
                this.columnNumInscripcion = new global::System.Data.DataColumn("NumInscripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumInscripcion);
                this._column_ProrrataGeneral = new global::System.Data.DataColumn("%ProrrataGeneral", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._column_ProrrataGeneral.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_ProrrataGeneral");
                this._column_ProrrataGeneral.ExtendedProperties.Add("Generator_UserColumnName", "%ProrrataGeneral");
                base.Columns.Add(this._column_ProrrataGeneral);
                this.columnReferenciaEdi_ = new global::System.Data.DataColumn("ReferenciaEdi_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenciaEdi_);
                this.columnIdTipoPersona = new global::System.Data.DataColumn("IdTipoPersona", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdTipoPersona);
                this.columnSociedadMercantil = new global::System.Data.DataColumn("SociedadMercantil", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSociedadMercantil);
                this.columnEmpresaEstimaciones = new global::System.Data.DataColumn("EmpresaEstimaciones", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaEstimaciones);
                this.columnTipoEmpresaSinc = new global::System.Data.DataColumn("TipoEmpresaSinc", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoEmpresaSinc);
                this.columnSincronizacion = new global::System.Data.DataColumn("Sincronizacion", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSincronizacion);
                this.columnTipoRegistroNum = new global::System.Data.DataColumn("TipoRegistroNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoRegistroNum);
                this.columnCodigoRegistroMercantil = new global::System.Data.DataColumn("CodigoRegistroMercantil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoRegistroMercantil);
                this.columnIdEmpresa = new global::System.Data.DataColumn("IdEmpresa", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdEmpresa);
                this.columnCodigoLEI = new global::System.Data.DataColumn("CodigoLEI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoLEI);
                this.columnSectoresDiferenciados = new global::System.Data.DataColumn("SectoresDiferenciados", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectoresDiferenciados);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodigoEmpresa}, true));
                this.columnCodigoEmpresa.AllowDBNull = false;
                this.columnCodigoEmpresa.Unique = true;
                this.columnTipoEmpresa.AllowDBNull = false;
                this.columnMarcaEmpresaPersona.AllowDBNull = false;
                this.columnMarcaEmpresaPersona.MaxLength = 1;
                this.columnEmpresa.AllowDBNull = false;
                this.columnEmpresa.MaxLength = 45;
                this.columnNombrePersona.AllowDBNull = false;
                this.columnNombrePersona.MaxLength = 15;
                this.columnPrimerApellido.AllowDBNull = false;
                this.columnPrimerApellido.MaxLength = 15;
                this.columnSegundoApellido.AllowDBNull = false;
                this.columnSegundoApellido.MaxLength = 15;
                this.columnAnagrama.AllowDBNull = false;
                this.columnAnagrama.MaxLength = 45;
                this.columnSiglaNacion.AllowDBNull = false;
                this.columnSiglaNacion.MaxLength = 2;
                this.columnCifDni.AllowDBNull = false;
                this.columnCifDni.MaxLength = 13;
                this.columnCifEuropeo.AllowDBNull = false;
                this.columnCifEuropeo.MaxLength = 15;
                this.columnCifEspanol.AllowDBNull = false;
                this.columnCifEspanol.MaxLength = 9;
                this.columnCodigoTerritorio.AllowDBNull = false;
                this.columnCodigoMonedaBase.AllowDBNull = false;
                this.columnCodigoMonedaBase.MaxLength = 3;
                this.columnCodigoMonedaBaseAnterior.AllowDBNull = false;
                this.columnCodigoMonedaBaseAnterior.MaxLength = 3;
                this.columnCodigoBanco.AllowDBNull = false;
                this.columnCodigoBanco.MaxLength = 6;
                this.columnCodigoOficina.AllowDBNull = false;
                this.columnCodigoOficina.MaxLength = 6;
                this.columnDC.AllowDBNull = false;
                this.columnDC.MaxLength = 2;
                this.columnCCC.AllowDBNull = false;
                this.columnCCC.MaxLength = 15;
                this.columnIBAN.AllowDBNull = false;
                this.columnIBAN.MaxLength = 34;
                this.columnMarcaAdeudo.AllowDBNull = false;
                this.columnLetrasEtiqueta.AllowDBNull = false;
                this.columnLetrasEtiqueta.MaxLength = 4;
                this.columnTipoRegistroPublico.AllowDBNull = false;
                this.columnTipoRegistroPublico.MaxLength = 32;
                this.columnRegistroMercantil.AllowDBNull = false;
                this.columnRegistroMercantil.MaxLength = 32;
                this.columnNumTomo.AllowDBNull = false;
                this.columnNumTomo.MaxLength = 7;
                this.columnNumLibro.AllowDBNull = false;
                this.columnNumLibro.MaxLength = 7;
                this.columnNumSeccion.AllowDBNull = false;
                this.columnNumSeccion.MaxLength = 7;
                this.columnNumFolio.AllowDBNull = false;
                this.columnNumFolio.MaxLength = 7;
                this.columnNumHojaLibro.AllowDBNull = false;
                this.columnNumHojaLibro.MaxLength = 7;
                this.columnNumInscripcion.AllowDBNull = false;
                this.columnNumInscripcion.MaxLength = 7;
                this._column_ProrrataGeneral.AllowDBNull = false;
                this.columnReferenciaEdi_.AllowDBNull = false;
                this.columnReferenciaEdi_.MaxLength = 35;
                this.columnIdTipoPersona.AllowDBNull = false;
                this.columnSociedadMercantil.AllowDBNull = false;
                this.columnEmpresaEstimaciones.AllowDBNull = false;
                this.columnTipoEmpresaSinc.AllowDBNull = false;
                this.columnSincronizacion.AllowDBNull = false;
                this.columnTipoRegistroNum.AllowDBNull = false;
                this.columnCodigoRegistroMercantil.AllowDBNull = false;
                this.columnCodigoRegistroMercantil.MaxLength = 5;
                this.columnIdEmpresa.AllowDBNull = false;
                this.columnCodigoLEI.AllowDBNull = false;
                this.columnCodigoLEI.MaxLength = 20;
                this.columnSectoresDiferenciados.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasRow NewEmpresasRow() {
                return ((EmpresasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmpresasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EmpresasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmpresasRowChanged != null)) {
                    this.EmpresasRowChanged(this, new EmpresasRowChangeEvent(((EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmpresasRowChanging != null)) {
                    this.EmpresasRowChanging(this, new EmpresasRowChangeEvent(((EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmpresasRowDeleted != null)) {
                    this.EmpresasRowDeleted(this, new EmpresasRowChangeEvent(((EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmpresasRowDeleting != null)) {
                    this.EmpresasRowDeleting(this, new EmpresasRowChangeEvent(((EmpresasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEmpresasRow(EmpresasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ZthotelDataSet7 ds = new ZthotelDataSet7();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmpresasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InventariosDataTable : global::System.Data.TypedTableBase<InventariosRow> {
            
            private global::System.Data.DataColumn columnCodigoEmpresa;
            
            private global::System.Data.DataColumn columnInventario;
            
            private global::System.Data.DataColumn columnCodigoArticulo;
            
            private global::System.Data.DataColumn columnPartida;
            
            private global::System.Data.DataColumn columnCodigoAlmacen;
            
            private global::System.Data.DataColumn columnTipoUnidadMedida_;
            
            private global::System.Data.DataColumn columnPrecioMedio;
            
            private global::System.Data.DataColumn columnFechaCreacion;
            
            private global::System.Data.DataColumn columnPrecioNuevo;
            
            private global::System.Data.DataColumn columnFechaCaducidad;
            
            private global::System.Data.DataColumn columnPrecioNuevo1_;
            
            private global::System.Data.DataColumn columnPrecioMedio1_;
            
            private global::System.Data.DataColumn columnDescripcionArticulo;
            
            private global::System.Data.DataColumn columnFecha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InventariosDataTable() {
                this.TableName = "Inventarios";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InventariosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InventariosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoEmpresaColumn {
                get {
                    return this.columnCodigoEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InventarioColumn {
                get {
                    return this.columnInventario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoArticuloColumn {
                get {
                    return this.columnCodigoArticulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PartidaColumn {
                get {
                    return this.columnPartida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodigoAlmacenColumn {
                get {
                    return this.columnCodigoAlmacen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoUnidadMedida_Column {
                get {
                    return this.columnTipoUnidadMedida_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrecioMedioColumn {
                get {
                    return this.columnPrecioMedio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrecioNuevoColumn {
                get {
                    return this.columnPrecioNuevo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaCaducidadColumn {
                get {
                    return this.columnFechaCaducidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrecioNuevo1_Column {
                get {
                    return this.columnPrecioNuevo1_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrecioMedio1_Column {
                get {
                    return this.columnPrecioMedio1_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescripcionArticuloColumn {
                get {
                    return this.columnDescripcionArticulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InventariosRow this[int index] {
                get {
                    return ((InventariosRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InventariosRowChangeEventHandler InventariosRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InventariosRowChangeEventHandler InventariosRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InventariosRowChangeEventHandler InventariosRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InventariosRowChangeEventHandler InventariosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInventariosRow(InventariosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InventariosRow AddInventariosRow(short CodigoEmpresa, string Inventario, string CodigoArticulo, string Partida, string CodigoAlmacen, string TipoUnidadMedida_, decimal PrecioMedio, System.DateTime FechaCreacion, decimal PrecioNuevo, System.DateTime FechaCaducidad, decimal PrecioNuevo1_, decimal PrecioMedio1_, string DescripcionArticulo, System.DateTime Fecha) {
                InventariosRow rowInventariosRow = ((InventariosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CodigoEmpresa,
                        Inventario,
                        CodigoArticulo,
                        Partida,
                        CodigoAlmacen,
                        TipoUnidadMedida_,
                        PrecioMedio,
                        FechaCreacion,
                        PrecioNuevo,
                        FechaCaducidad,
                        PrecioNuevo1_,
                        PrecioMedio1_,
                        DescripcionArticulo,
                        Fecha};
                rowInventariosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInventariosRow);
                return rowInventariosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InventariosDataTable cln = ((InventariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InventariosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCodigoEmpresa = base.Columns["CodigoEmpresa"];
                this.columnInventario = base.Columns["Inventario"];
                this.columnCodigoArticulo = base.Columns["CodigoArticulo"];
                this.columnPartida = base.Columns["Partida"];
                this.columnCodigoAlmacen = base.Columns["CodigoAlmacen"];
                this.columnTipoUnidadMedida_ = base.Columns["TipoUnidadMedida_"];
                this.columnPrecioMedio = base.Columns["PrecioMedio"];
                this.columnFechaCreacion = base.Columns["FechaCreacion"];
                this.columnPrecioNuevo = base.Columns["PrecioNuevo"];
                this.columnFechaCaducidad = base.Columns["FechaCaducidad"];
                this.columnPrecioNuevo1_ = base.Columns["PrecioNuevo1_"];
                this.columnPrecioMedio1_ = base.Columns["PrecioMedio1_"];
                this.columnDescripcionArticulo = base.Columns["DescripcionArticulo"];
                this.columnFecha = base.Columns["Fecha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCodigoEmpresa = new global::System.Data.DataColumn("CodigoEmpresa", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoEmpresa);
                this.columnInventario = new global::System.Data.DataColumn("Inventario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInventario);
                this.columnCodigoArticulo = new global::System.Data.DataColumn("CodigoArticulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoArticulo);
                this.columnPartida = new global::System.Data.DataColumn("Partida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartida);
                this.columnCodigoAlmacen = new global::System.Data.DataColumn("CodigoAlmacen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoAlmacen);
                this.columnTipoUnidadMedida_ = new global::System.Data.DataColumn("TipoUnidadMedida_", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoUnidadMedida_);
                this.columnPrecioMedio = new global::System.Data.DataColumn("PrecioMedio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioMedio);
                this.columnFechaCreacion = new global::System.Data.DataColumn("FechaCreacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaCreacion);
                this.columnPrecioNuevo = new global::System.Data.DataColumn("PrecioNuevo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioNuevo);
                this.columnFechaCaducidad = new global::System.Data.DataColumn("FechaCaducidad", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaCaducidad);
                this.columnPrecioNuevo1_ = new global::System.Data.DataColumn("PrecioNuevo1_", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioNuevo1_);
                this.columnPrecioMedio1_ = new global::System.Data.DataColumn("PrecioMedio1_", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioMedio1_);
                this.columnDescripcionArticulo = new global::System.Data.DataColumn("DescripcionArticulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcionArticulo);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnCodigoEmpresa.AllowDBNull = false;
                this.columnInventario.AllowDBNull = false;
                this.columnInventario.MaxLength = 10;
                this.columnCodigoArticulo.AllowDBNull = false;
                this.columnCodigoArticulo.MaxLength = 20;
                this.columnPartida.AllowDBNull = false;
                this.columnPartida.MaxLength = 15;
                this.columnCodigoAlmacen.AllowDBNull = false;
                this.columnCodigoAlmacen.MaxLength = 4;
                this.columnTipoUnidadMedida_.AllowDBNull = false;
                this.columnTipoUnidadMedida_.MaxLength = 10;
                this.columnPrecioMedio.AllowDBNull = false;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnPrecioNuevo.AllowDBNull = false;
                this.columnPrecioNuevo1_.AllowDBNull = false;
                this.columnPrecioMedio1_.AllowDBNull = false;
                this.columnDescripcionArticulo.AllowDBNull = false;
                this.columnDescripcionArticulo.MaxLength = 50;
                this.columnFecha.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InventariosRow NewInventariosRow() {
                return ((InventariosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InventariosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InventariosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InventariosRowChanged != null)) {
                    this.InventariosRowChanged(this, new InventariosRowChangeEvent(((InventariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InventariosRowChanging != null)) {
                    this.InventariosRowChanging(this, new InventariosRowChangeEvent(((InventariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InventariosRowDeleted != null)) {
                    this.InventariosRowDeleted(this, new InventariosRowChangeEvent(((InventariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InventariosRowDeleting != null)) {
                    this.InventariosRowDeleting(this, new InventariosRowChangeEvent(((InventariosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInventariosRow(InventariosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ZthotelDataSet7 ds = new ZthotelDataSet7();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InventariosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmpresasRow : global::System.Data.DataRow {
            
            private EmpresasDataTable tableEmpresas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EmpresasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmpresas = ((EmpresasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short CodigoEmpresa {
                get {
                    return ((short)(this[this.tableEmpresas.CodigoEmpresaColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoEmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte TipoEmpresa {
                get {
                    return ((byte)(this[this.tableEmpresas.TipoEmpresaColumn]));
                }
                set {
                    this[this.tableEmpresas.TipoEmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MarcaEmpresaPersona {
                get {
                    return ((string)(this[this.tableEmpresas.MarcaEmpresaPersonaColumn]));
                }
                set {
                    this[this.tableEmpresas.MarcaEmpresaPersonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Empresa {
                get {
                    return ((string)(this[this.tableEmpresas.EmpresaColumn]));
                }
                set {
                    this[this.tableEmpresas.EmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NombrePersona {
                get {
                    return ((string)(this[this.tableEmpresas.NombrePersonaColumn]));
                }
                set {
                    this[this.tableEmpresas.NombrePersonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PrimerApellido {
                get {
                    return ((string)(this[this.tableEmpresas.PrimerApellidoColumn]));
                }
                set {
                    this[this.tableEmpresas.PrimerApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SegundoApellido {
                get {
                    return ((string)(this[this.tableEmpresas.SegundoApellidoColumn]));
                }
                set {
                    this[this.tableEmpresas.SegundoApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Anagrama {
                get {
                    return ((string)(this[this.tableEmpresas.AnagramaColumn]));
                }
                set {
                    this[this.tableEmpresas.AnagramaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SiglaNacion {
                get {
                    return ((string)(this[this.tableEmpresas.SiglaNacionColumn]));
                }
                set {
                    this[this.tableEmpresas.SiglaNacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CifDni {
                get {
                    return ((string)(this[this.tableEmpresas.CifDniColumn]));
                }
                set {
                    this[this.tableEmpresas.CifDniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CifEuropeo {
                get {
                    return ((string)(this[this.tableEmpresas.CifEuropeoColumn]));
                }
                set {
                    this[this.tableEmpresas.CifEuropeoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CifEspanol {
                get {
                    return ((string)(this[this.tableEmpresas.CifEspanolColumn]));
                }
                set {
                    this[this.tableEmpresas.CifEspanolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaAlta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmpresas.FechaAltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaAlta\' in table \'Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmpresas.FechaAltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaBaja {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEmpresas.FechaBajaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaBaja\' in table \'Empresas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmpresas.FechaBajaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short CodigoTerritorio {
                get {
                    return ((short)(this[this.tableEmpresas.CodigoTerritorioColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoTerritorioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoMonedaBase {
                get {
                    return ((string)(this[this.tableEmpresas.CodigoMonedaBaseColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoMonedaBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoMonedaBaseAnterior {
                get {
                    return ((string)(this[this.tableEmpresas.CodigoMonedaBaseAnteriorColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoMonedaBaseAnteriorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoBanco {
                get {
                    return ((string)(this[this.tableEmpresas.CodigoBancoColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoBancoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoOficina {
                get {
                    return ((string)(this[this.tableEmpresas.CodigoOficinaColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoOficinaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DC {
                get {
                    return ((string)(this[this.tableEmpresas.DCColumn]));
                }
                set {
                    this[this.tableEmpresas.DCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CCC {
                get {
                    return ((string)(this[this.tableEmpresas.CCCColumn]));
                }
                set {
                    this[this.tableEmpresas.CCCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IBAN {
                get {
                    return ((string)(this[this.tableEmpresas.IBANColumn]));
                }
                set {
                    this[this.tableEmpresas.IBANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short MarcaAdeudo {
                get {
                    return ((short)(this[this.tableEmpresas.MarcaAdeudoColumn]));
                }
                set {
                    this[this.tableEmpresas.MarcaAdeudoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LetrasEtiqueta {
                get {
                    return ((string)(this[this.tableEmpresas.LetrasEtiquetaColumn]));
                }
                set {
                    this[this.tableEmpresas.LetrasEtiquetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoRegistroPublico {
                get {
                    return ((string)(this[this.tableEmpresas.TipoRegistroPublicoColumn]));
                }
                set {
                    this[this.tableEmpresas.TipoRegistroPublicoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegistroMercantil {
                get {
                    return ((string)(this[this.tableEmpresas.RegistroMercantilColumn]));
                }
                set {
                    this[this.tableEmpresas.RegistroMercantilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumTomo {
                get {
                    return ((string)(this[this.tableEmpresas.NumTomoColumn]));
                }
                set {
                    this[this.tableEmpresas.NumTomoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumLibro {
                get {
                    return ((string)(this[this.tableEmpresas.NumLibroColumn]));
                }
                set {
                    this[this.tableEmpresas.NumLibroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumSeccion {
                get {
                    return ((string)(this[this.tableEmpresas.NumSeccionColumn]));
                }
                set {
                    this[this.tableEmpresas.NumSeccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumFolio {
                get {
                    return ((string)(this[this.tableEmpresas.NumFolioColumn]));
                }
                set {
                    this[this.tableEmpresas.NumFolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumHojaLibro {
                get {
                    return ((string)(this[this.tableEmpresas.NumHojaLibroColumn]));
                }
                set {
                    this[this.tableEmpresas.NumHojaLibroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumInscripcion {
                get {
                    return ((string)(this[this.tableEmpresas.NumInscripcionColumn]));
                }
                set {
                    this[this.tableEmpresas.NumInscripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal @__ProrrataGeneral {
                get {
                    return ((decimal)(this[this.tableEmpresas.@__ProrrataGeneralColumn]));
                }
                set {
                    this[this.tableEmpresas.@__ProrrataGeneralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReferenciaEdi_ {
                get {
                    return ((string)(this[this.tableEmpresas.ReferenciaEdi_Column]));
                }
                set {
                    this[this.tableEmpresas.ReferenciaEdi_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short IdTipoPersona {
                get {
                    return ((short)(this[this.tableEmpresas.IdTipoPersonaColumn]));
                }
                set {
                    this[this.tableEmpresas.IdTipoPersonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short SociedadMercantil {
                get {
                    return ((short)(this[this.tableEmpresas.SociedadMercantilColumn]));
                }
                set {
                    this[this.tableEmpresas.SociedadMercantilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short EmpresaEstimaciones {
                get {
                    return ((short)(this[this.tableEmpresas.EmpresaEstimacionesColumn]));
                }
                set {
                    this[this.tableEmpresas.EmpresaEstimacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short TipoEmpresaSinc {
                get {
                    return ((short)(this[this.tableEmpresas.TipoEmpresaSincColumn]));
                }
                set {
                    this[this.tableEmpresas.TipoEmpresaSincColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short Sincronizacion {
                get {
                    return ((short)(this[this.tableEmpresas.SincronizacionColumn]));
                }
                set {
                    this[this.tableEmpresas.SincronizacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short TipoRegistroNum {
                get {
                    return ((short)(this[this.tableEmpresas.TipoRegistroNumColumn]));
                }
                set {
                    this[this.tableEmpresas.TipoRegistroNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoRegistroMercantil {
                get {
                    return ((string)(this[this.tableEmpresas.CodigoRegistroMercantilColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoRegistroMercantilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid IdEmpresa {
                get {
                    return ((global::System.Guid)(this[this.tableEmpresas.IdEmpresaColumn]));
                }
                set {
                    this[this.tableEmpresas.IdEmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoLEI {
                get {
                    return ((string)(this[this.tableEmpresas.CodigoLEIColumn]));
                }
                set {
                    this[this.tableEmpresas.CodigoLEIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short SectoresDiferenciados {
                get {
                    return ((short)(this[this.tableEmpresas.SectoresDiferenciadosColumn]));
                }
                set {
                    this[this.tableEmpresas.SectoresDiferenciadosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaAltaNull() {
                return this.IsNull(this.tableEmpresas.FechaAltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaAltaNull() {
                this[this.tableEmpresas.FechaAltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaBajaNull() {
                return this.IsNull(this.tableEmpresas.FechaBajaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaBajaNull() {
                this[this.tableEmpresas.FechaBajaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InventariosRow : global::System.Data.DataRow {
            
            private InventariosDataTable tableInventarios;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InventariosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInventarios = ((InventariosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short CodigoEmpresa {
                get {
                    return ((short)(this[this.tableInventarios.CodigoEmpresaColumn]));
                }
                set {
                    this[this.tableInventarios.CodigoEmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Inventario {
                get {
                    return ((string)(this[this.tableInventarios.InventarioColumn]));
                }
                set {
                    this[this.tableInventarios.InventarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoArticulo {
                get {
                    return ((string)(this[this.tableInventarios.CodigoArticuloColumn]));
                }
                set {
                    this[this.tableInventarios.CodigoArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Partida {
                get {
                    return ((string)(this[this.tableInventarios.PartidaColumn]));
                }
                set {
                    this[this.tableInventarios.PartidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodigoAlmacen {
                get {
                    return ((string)(this[this.tableInventarios.CodigoAlmacenColumn]));
                }
                set {
                    this[this.tableInventarios.CodigoAlmacenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoUnidadMedida_ {
                get {
                    return ((string)(this[this.tableInventarios.TipoUnidadMedida_Column]));
                }
                set {
                    this[this.tableInventarios.TipoUnidadMedida_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrecioMedio {
                get {
                    return ((decimal)(this[this.tableInventarios.PrecioMedioColumn]));
                }
                set {
                    this[this.tableInventarios.PrecioMedioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaCreacion {
                get {
                    return ((global::System.DateTime)(this[this.tableInventarios.FechaCreacionColumn]));
                }
                set {
                    this[this.tableInventarios.FechaCreacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrecioNuevo {
                get {
                    return ((decimal)(this[this.tableInventarios.PrecioNuevoColumn]));
                }
                set {
                    this[this.tableInventarios.PrecioNuevoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FechaCaducidad {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInventarios.FechaCaducidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaCaducidad\' in table \'Inventarios\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInventarios.FechaCaducidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrecioNuevo1_ {
                get {
                    return ((decimal)(this[this.tableInventarios.PrecioNuevo1_Column]));
                }
                set {
                    this[this.tableInventarios.PrecioNuevo1_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrecioMedio1_ {
                get {
                    return ((decimal)(this[this.tableInventarios.PrecioMedio1_Column]));
                }
                set {
                    this[this.tableInventarios.PrecioMedio1_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DescripcionArticulo {
                get {
                    return ((string)(this[this.tableInventarios.DescripcionArticuloColumn]));
                }
                set {
                    this[this.tableInventarios.DescripcionArticuloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableInventarios.FechaColumn]));
                }
                set {
                    this[this.tableInventarios.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFechaCaducidadNull() {
                return this.IsNull(this.tableInventarios.FechaCaducidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFechaCaducidadNull() {
                this[this.tableInventarios.FechaCaducidadColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EmpresasRowChangeEvent : global::System.EventArgs {
            
            private EmpresasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasRowChangeEvent(EmpresasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EmpresasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InventariosRowChangeEvent : global::System.EventArgs {
            
            private InventariosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InventariosRowChangeEvent(InventariosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InventariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AppInv.ZthotelDataSet7TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmpresasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public EmpresasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Empresas";
            tableMapping.ColumnMappings.Add("CodigoEmpresa", "CodigoEmpresa");
            tableMapping.ColumnMappings.Add("TipoEmpresa", "TipoEmpresa");
            tableMapping.ColumnMappings.Add("MarcaEmpresaPersona", "MarcaEmpresaPersona");
            tableMapping.ColumnMappings.Add("Empresa", "Empresa");
            tableMapping.ColumnMappings.Add("NombrePersona", "NombrePersona");
            tableMapping.ColumnMappings.Add("PrimerApellido", "PrimerApellido");
            tableMapping.ColumnMappings.Add("SegundoApellido", "SegundoApellido");
            tableMapping.ColumnMappings.Add("Anagrama", "Anagrama");
            tableMapping.ColumnMappings.Add("SiglaNacion", "SiglaNacion");
            tableMapping.ColumnMappings.Add("CifDni", "CifDni");
            tableMapping.ColumnMappings.Add("CifEuropeo", "CifEuropeo");
            tableMapping.ColumnMappings.Add("CifEspanol", "CifEspanol");
            tableMapping.ColumnMappings.Add("FechaAlta", "FechaAlta");
            tableMapping.ColumnMappings.Add("FechaBaja", "FechaBaja");
            tableMapping.ColumnMappings.Add("CodigoTerritorio", "CodigoTerritorio");
            tableMapping.ColumnMappings.Add("CodigoMonedaBase", "CodigoMonedaBase");
            tableMapping.ColumnMappings.Add("CodigoMonedaBaseAnterior", "CodigoMonedaBaseAnterior");
            tableMapping.ColumnMappings.Add("CodigoBanco", "CodigoBanco");
            tableMapping.ColumnMappings.Add("CodigoOficina", "CodigoOficina");
            tableMapping.ColumnMappings.Add("DC", "DC");
            tableMapping.ColumnMappings.Add("CCC", "CCC");
            tableMapping.ColumnMappings.Add("IBAN", "IBAN");
            tableMapping.ColumnMappings.Add("MarcaAdeudo", "MarcaAdeudo");
            tableMapping.ColumnMappings.Add("LetrasEtiqueta", "LetrasEtiqueta");
            tableMapping.ColumnMappings.Add("TipoRegistroPublico", "TipoRegistroPublico");
            tableMapping.ColumnMappings.Add("RegistroMercantil", "RegistroMercantil");
            tableMapping.ColumnMappings.Add("NumTomo", "NumTomo");
            tableMapping.ColumnMappings.Add("NumLibro", "NumLibro");
            tableMapping.ColumnMappings.Add("NumSeccion", "NumSeccion");
            tableMapping.ColumnMappings.Add("NumFolio", "NumFolio");
            tableMapping.ColumnMappings.Add("NumHojaLibro", "NumHojaLibro");
            tableMapping.ColumnMappings.Add("NumInscripcion", "NumInscripcion");
            tableMapping.ColumnMappings.Add("%ProrrataGeneral", "%ProrrataGeneral");
            tableMapping.ColumnMappings.Add("ReferenciaEdi_", "ReferenciaEdi_");
            tableMapping.ColumnMappings.Add("IdTipoPersona", "IdTipoPersona");
            tableMapping.ColumnMappings.Add("SociedadMercantil", "SociedadMercantil");
            tableMapping.ColumnMappings.Add("EmpresaEstimaciones", "EmpresaEstimaciones");
            tableMapping.ColumnMappings.Add("TipoEmpresaSinc", "TipoEmpresaSinc");
            tableMapping.ColumnMappings.Add("Sincronizacion", "Sincronizacion");
            tableMapping.ColumnMappings.Add("TipoRegistroNum", "TipoRegistroNum");
            tableMapping.ColumnMappings.Add("CodigoRegistroMercantil", "CodigoRegistroMercantil");
            tableMapping.ColumnMappings.Add("IdEmpresa", "IdEmpresa");
            tableMapping.ColumnMappings.Add("CodigoLEI", "CodigoLEI");
            tableMapping.ColumnMappings.Add("SectoresDiferenciados", "SectoresDiferenciados");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Empresas] WHERE (([CodigoEmpresa] = @Original_CodigoEmpresa) A" +
                "ND ([TipoEmpresa] = @Original_TipoEmpresa) AND ([MarcaEmpresaPersona] = @Origina" +
                "l_MarcaEmpresaPersona) AND ([Empresa] = @Original_Empresa) AND ([NombrePersona] " +
                "= @Original_NombrePersona) AND ([PrimerApellido] = @Original_PrimerApellido) AND" +
                " ([SegundoApellido] = @Original_SegundoApellido) AND ([Anagrama] = @Original_Ana" +
                "grama) AND ([SiglaNacion] = @Original_SiglaNacion) AND ([CifDni] = @Original_Cif" +
                "Dni) AND ([CifEuropeo] = @Original_CifEuropeo) AND ([CifEspanol] = @Original_Cif" +
                "Espanol) AND ((@IsNull_FechaAlta = 1 AND [FechaAlta] IS NULL) OR ([FechaAlta] = " +
                "@Original_FechaAlta)) AND ((@IsNull_FechaBaja = 1 AND [FechaBaja] IS NULL) OR ([" +
                "FechaBaja] = @Original_FechaBaja)) AND ([CodigoTerritorio] = @Original_CodigoTer" +
                "ritorio) AND ([CodigoMonedaBase] = @Original_CodigoMonedaBase) AND ([CodigoMoned" +
                "aBaseAnterior] = @Original_CodigoMonedaBaseAnterior) AND ([CodigoBanco] = @Origi" +
                "nal_CodigoBanco) AND ([CodigoOficina] = @Original_CodigoOficina) AND ([DC] = @Or" +
                "iginal_DC) AND ([CCC] = @Original_CCC) AND ([IBAN] = @Original_IBAN) AND ([Marca" +
                "Adeudo] = @Original_MarcaAdeudo) AND ([LetrasEtiqueta] = @Original_LetrasEtiquet" +
                "a) AND ([TipoRegistroPublico] = @Original_TipoRegistroPublico) AND ([RegistroMer" +
                "cantil] = @Original_RegistroMercantil) AND ([NumTomo] = @Original_NumTomo) AND (" +
                "[NumLibro] = @Original_NumLibro) AND ([NumSeccion] = @Original_NumSeccion) AND (" +
                "[NumFolio] = @Original_NumFolio) AND ([NumHojaLibro] = @Original_NumHojaLibro) A" +
                "ND ([NumInscripcion] = @Original_NumInscripcion) AND ([%ProrrataGeneral] = @p2) " +
                "AND ([ReferenciaEdi_] = @Original_ReferenciaEdi_) AND ([IdTipoPersona] = @Origin" +
                "al_IdTipoPersona) AND ([SociedadMercantil] = @Original_SociedadMercantil) AND ([" +
                "EmpresaEstimaciones] = @Original_EmpresaEstimaciones) AND ([TipoEmpresaSinc] = @" +
                "Original_TipoEmpresaSinc) AND ([Sincronizacion] = @Original_Sincronizacion) AND " +
                "([TipoRegistroNum] = @Original_TipoRegistroNum) AND ([CodigoRegistroMercantil] =" +
                " @Original_CodigoRegistroMercantil) AND ([IdEmpresa] = @Original_IdEmpresa) AND " +
                "([CodigoLEI] = @Original_CodigoLEI) AND ([SectoresDiferenciados] = @Original_Sec" +
                "toresDiferenciados))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoEmpresa", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoEmpresa", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarcaEmpresaPersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaEmpresaPersona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Empresa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Empresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NombrePersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombrePersona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrimerApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimerApellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SegundoApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SegundoApellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anagrama", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anagrama", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiglaNacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiglaNacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CifDni", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifDni", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CifEuropeo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEuropeo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CifEspanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEspanol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaAlta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaAlta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaAlta", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaAlta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaBaja", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaBaja", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaBaja", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaBaja", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoTerritorio", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoTerritorio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoMonedaBase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBase", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoMonedaBaseAnterior", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBaseAnterior", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoBanco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoBanco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoOficina", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoOficina", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IBAN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IBAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarcaAdeudo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaAdeudo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LetrasEtiqueta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetrasEtiqueta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoRegistroPublico", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroPublico", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegistroMercantil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumTomo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumTomo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumLibro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumSeccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumSeccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumFolio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumFolio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumHojaLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumHojaLibro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumInscripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumInscripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "%ProrrataGeneral", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenciaEdi_", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenciaEdi_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdTipoPersona", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTipoPersona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SociedadMercantil", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SociedadMercantil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpresaEstimaciones", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpresaEstimaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoEmpresaSinc", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresaSinc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sincronizacion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sincronizacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoRegistroNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoRegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoRegistroMercantil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdEmpresa", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdEmpresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoLEI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoLEI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SectoresDiferenciados", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SectoresDiferenciados", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Empresas] ([CodigoEmpresa], [TipoEmpresa], [MarcaEmpresaPerson" +
                "a], [Empresa], [NombrePersona], [PrimerApellido], [SegundoApellido], [Anagrama]," +
                " [SiglaNacion], [CifDni], [CifEuropeo], [CifEspanol], [FechaAlta], [FechaBaja], " +
                "[CodigoTerritorio], [CodigoMonedaBase], [CodigoMonedaBaseAnterior], [CodigoBanco" +
                "], [CodigoOficina], [DC], [CCC], [IBAN], [MarcaAdeudo], [LetrasEtiqueta], [TipoR" +
                "egistroPublico], [RegistroMercantil], [NumTomo], [NumLibro], [NumSeccion], [NumF" +
                "olio], [NumHojaLibro], [NumInscripcion], [%ProrrataGeneral], [ReferenciaEdi_], [" +
                "IdTipoPersona], [SociedadMercantil], [EmpresaEstimaciones], [TipoEmpresaSinc], [" +
                "Sincronizacion], [TipoRegistroNum], [CodigoRegistroMercantil], [IdEmpresa], [Cod" +
                "igoLEI], [SectoresDiferenciados]) VALUES (@CodigoEmpresa, @TipoEmpresa, @MarcaEm" +
                "presaPersona, @Empresa, @NombrePersona, @PrimerApellido, @SegundoApellido, @Anag" +
                "rama, @SiglaNacion, @CifDni, @CifEuropeo, @CifEspanol, @FechaAlta, @FechaBaja, @" +
                "CodigoTerritorio, @CodigoMonedaBase, @CodigoMonedaBaseAnterior, @CodigoBanco, @C" +
                "odigoOficina, @DC, @CCC, @IBAN, @MarcaAdeudo, @LetrasEtiqueta, @TipoRegistroPubl" +
                "ico, @RegistroMercantil, @NumTomo, @NumLibro, @NumSeccion, @NumFolio, @NumHojaLi" +
                "bro, @NumInscripcion, @p1, @ReferenciaEdi_, @IdTipoPersona, @SociedadMercantil, " +
                "@EmpresaEstimaciones, @TipoEmpresaSinc, @Sincronizacion, @TipoRegistroNum, @Codi" +
                "goRegistroMercantil, @IdEmpresa, @CodigoLEI, @SectoresDiferenciados);\r\nSELECT Co" +
                "digoEmpresa, TipoEmpresa, MarcaEmpresaPersona, Empresa, NombrePersona, PrimerApe" +
                "llido, SegundoApellido, Anagrama, SiglaNacion, CifDni, CifEuropeo, CifEspanol, F" +
                "echaAlta, FechaBaja, CodigoTerritorio, CodigoMonedaBase, CodigoMonedaBaseAnterio" +
                "r, CodigoBanco, CodigoOficina, DC, CCC, IBAN, MarcaAdeudo, LetrasEtiqueta, TipoR" +
                "egistroPublico, RegistroMercantil, NumTomo, NumLibro, NumSeccion, NumFolio, NumH" +
                "ojaLibro, NumInscripcion, [%ProrrataGeneral], ReferenciaEdi_, IdTipoPersona, Soc" +
                "iedadMercantil, EmpresaEstimaciones, TipoEmpresaSinc, Sincronizacion, TipoRegist" +
                "roNum, CodigoRegistroMercantil, IdEmpresa, CodigoLEI, SectoresDiferenciados FROM" +
                " Empresas WHERE (CodigoEmpresa = @CodigoEmpresa)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoEmpresa", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoEmpresa", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarcaEmpresaPersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaEmpresaPersona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Empresa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Empresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombrePersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombrePersona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrimerApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimerApellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SegundoApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SegundoApellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anagrama", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anagrama", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiglaNacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiglaNacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CifDni", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifDni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CifEuropeo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEuropeo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CifEspanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEspanol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaAlta", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaAlta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaBaja", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaBaja", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoTerritorio", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoTerritorio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoMonedaBase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoMonedaBaseAnterior", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBaseAnterior", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoBanco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoBanco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoOficina", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoOficina", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IBAN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IBAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarcaAdeudo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaAdeudo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LetrasEtiqueta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetrasEtiqueta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoRegistroPublico", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroPublico", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegistroMercantil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumTomo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumTomo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumLibro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumSeccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumSeccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumFolio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumFolio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumHojaLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumHojaLibro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumInscripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumInscripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "%ProrrataGeneral", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenciaEdi_", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenciaEdi_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdTipoPersona", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTipoPersona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SociedadMercantil", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SociedadMercantil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpresaEstimaciones", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpresaEstimaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoEmpresaSinc", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresaSinc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sincronizacion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sincronizacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoRegistroNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoRegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoRegistroMercantil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdEmpresa", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoLEI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoLEI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SectoresDiferenciados", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SectoresDiferenciados", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Empresas] SET [CodigoEmpresa] = @CodigoEmpresa, [TipoEmpresa] = @Ti" +
                "poEmpresa, [MarcaEmpresaPersona] = @MarcaEmpresaPersona, [Empresa] = @Empresa, [" +
                "NombrePersona] = @NombrePersona, [PrimerApellido] = @PrimerApellido, [SegundoApe" +
                "llido] = @SegundoApellido, [Anagrama] = @Anagrama, [SiglaNacion] = @SiglaNacion," +
                " [CifDni] = @CifDni, [CifEuropeo] = @CifEuropeo, [CifEspanol] = @CifEspanol, [Fe" +
                "chaAlta] = @FechaAlta, [FechaBaja] = @FechaBaja, [CodigoTerritorio] = @CodigoTer" +
                "ritorio, [CodigoMonedaBase] = @CodigoMonedaBase, [CodigoMonedaBaseAnterior] = @C" +
                "odigoMonedaBaseAnterior, [CodigoBanco] = @CodigoBanco, [CodigoOficina] = @Codigo" +
                "Oficina, [DC] = @DC, [CCC] = @CCC, [IBAN] = @IBAN, [MarcaAdeudo] = @MarcaAdeudo," +
                " [LetrasEtiqueta] = @LetrasEtiqueta, [TipoRegistroPublico] = @TipoRegistroPublic" +
                "o, [RegistroMercantil] = @RegistroMercantil, [NumTomo] = @NumTomo, [NumLibro] = " +
                "@NumLibro, [NumSeccion] = @NumSeccion, [NumFolio] = @NumFolio, [NumHojaLibro] = " +
                "@NumHojaLibro, [NumInscripcion] = @NumInscripcion, [%ProrrataGeneral] = @p1, [Re" +
                "ferenciaEdi_] = @ReferenciaEdi_, [IdTipoPersona] = @IdTipoPersona, [SociedadMerc" +
                "antil] = @SociedadMercantil, [EmpresaEstimaciones] = @EmpresaEstimaciones, [Tipo" +
                "EmpresaSinc] = @TipoEmpresaSinc, [Sincronizacion] = @Sincronizacion, [TipoRegist" +
                "roNum] = @TipoRegistroNum, [CodigoRegistroMercantil] = @CodigoRegistroMercantil," +
                " [IdEmpresa] = @IdEmpresa, [CodigoLEI] = @CodigoLEI, [SectoresDiferenciados] = @" +
                "SectoresDiferenciados WHERE (([CodigoEmpresa] = @Original_CodigoEmpresa) AND ([T" +
                "ipoEmpresa] = @Original_TipoEmpresa) AND ([MarcaEmpresaPersona] = @Original_Marc" +
                "aEmpresaPersona) AND ([Empresa] = @Original_Empresa) AND ([NombrePersona] = @Ori" +
                "ginal_NombrePersona) AND ([PrimerApellido] = @Original_PrimerApellido) AND ([Seg" +
                "undoApellido] = @Original_SegundoApellido) AND ([Anagrama] = @Original_Anagrama)" +
                " AND ([SiglaNacion] = @Original_SiglaNacion) AND ([CifDni] = @Original_CifDni) A" +
                "ND ([CifEuropeo] = @Original_CifEuropeo) AND ([CifEspanol] = @Original_CifEspano" +
                "l) AND ((@IsNull_FechaAlta = 1 AND [FechaAlta] IS NULL) OR ([FechaAlta] = @Origi" +
                "nal_FechaAlta)) AND ((@IsNull_FechaBaja = 1 AND [FechaBaja] IS NULL) OR ([FechaB" +
                "aja] = @Original_FechaBaja)) AND ([CodigoTerritorio] = @Original_CodigoTerritori" +
                "o) AND ([CodigoMonedaBase] = @Original_CodigoMonedaBase) AND ([CodigoMonedaBaseA" +
                "nterior] = @Original_CodigoMonedaBaseAnterior) AND ([CodigoBanco] = @Original_Co" +
                "digoBanco) AND ([CodigoOficina] = @Original_CodigoOficina) AND ([DC] = @Original" +
                "_DC) AND ([CCC] = @Original_CCC) AND ([IBAN] = @Original_IBAN) AND ([MarcaAdeudo" +
                "] = @Original_MarcaAdeudo) AND ([LetrasEtiqueta] = @Original_LetrasEtiqueta) AND" +
                " ([TipoRegistroPublico] = @Original_TipoRegistroPublico) AND ([RegistroMercantil" +
                "] = @Original_RegistroMercantil) AND ([NumTomo] = @Original_NumTomo) AND ([NumLi" +
                "bro] = @Original_NumLibro) AND ([NumSeccion] = @Original_NumSeccion) AND ([NumFo" +
                "lio] = @Original_NumFolio) AND ([NumHojaLibro] = @Original_NumHojaLibro) AND ([N" +
                "umInscripcion] = @Original_NumInscripcion) AND ([%ProrrataGeneral] = @p2) AND ([" +
                "ReferenciaEdi_] = @Original_ReferenciaEdi_) AND ([IdTipoPersona] = @Original_IdT" +
                "ipoPersona) AND ([SociedadMercantil] = @Original_SociedadMercantil) AND ([Empres" +
                "aEstimaciones] = @Original_EmpresaEstimaciones) AND ([TipoEmpresaSinc] = @Origin" +
                "al_TipoEmpresaSinc) AND ([Sincronizacion] = @Original_Sincronizacion) AND ([Tipo" +
                "RegistroNum] = @Original_TipoRegistroNum) AND ([CodigoRegistroMercantil] = @Orig" +
                "inal_CodigoRegistroMercantil) AND ([IdEmpresa] = @Original_IdEmpresa) AND ([Codi" +
                "goLEI] = @Original_CodigoLEI) AND ([SectoresDiferenciados] = @Original_SectoresD" +
                "iferenciados));\r\nSELECT CodigoEmpresa, TipoEmpresa, MarcaEmpresaPersona, Empresa" +
                ", NombrePersona, PrimerApellido, SegundoApellido, Anagrama, SiglaNacion, CifDni," +
                " CifEuropeo, CifEspanol, FechaAlta, FechaBaja, CodigoTerritorio, CodigoMonedaBas" +
                "e, CodigoMonedaBaseAnterior, CodigoBanco, CodigoOficina, DC, CCC, IBAN, MarcaAde" +
                "udo, LetrasEtiqueta, TipoRegistroPublico, RegistroMercantil, NumTomo, NumLibro, " +
                "NumSeccion, NumFolio, NumHojaLibro, NumInscripcion, [%ProrrataGeneral], Referenc" +
                "iaEdi_, IdTipoPersona, SociedadMercantil, EmpresaEstimaciones, TipoEmpresaSinc, " +
                "Sincronizacion, TipoRegistroNum, CodigoRegistroMercantil, IdEmpresa, CodigoLEI, " +
                "SectoresDiferenciados FROM Empresas WHERE (CodigoEmpresa = @CodigoEmpresa)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoEmpresa", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoEmpresa", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarcaEmpresaPersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaEmpresaPersona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Empresa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Empresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NombrePersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombrePersona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrimerApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimerApellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SegundoApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SegundoApellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anagrama", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anagrama", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiglaNacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiglaNacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CifDni", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifDni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CifEuropeo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEuropeo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CifEspanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEspanol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaAlta", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaAlta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaBaja", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaBaja", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoTerritorio", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoTerritorio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoMonedaBase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoMonedaBaseAnterior", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBaseAnterior", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoBanco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoBanco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoOficina", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoOficina", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IBAN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IBAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarcaAdeudo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaAdeudo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LetrasEtiqueta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetrasEtiqueta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoRegistroPublico", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroPublico", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegistroMercantil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumTomo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumTomo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumLibro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumSeccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumSeccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumFolio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumFolio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumHojaLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumHojaLibro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumInscripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumInscripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "%ProrrataGeneral", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReferenciaEdi_", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenciaEdi_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdTipoPersona", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTipoPersona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SociedadMercantil", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SociedadMercantil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpresaEstimaciones", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpresaEstimaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoEmpresaSinc", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresaSinc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sincronizacion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sincronizacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoRegistroNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoRegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoRegistroMercantil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IdEmpresa", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoLEI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoLEI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SectoresDiferenciados", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SectoresDiferenciados", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoEmpresa", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoEmpresa", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarcaEmpresaPersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaEmpresaPersona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Empresa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Empresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NombrePersona", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NombrePersona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrimerApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrimerApellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SegundoApellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SegundoApellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anagrama", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anagrama", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiglaNacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiglaNacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CifDni", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifDni", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CifEuropeo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEuropeo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CifEspanol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CifEspanol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaAlta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaAlta", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaAlta", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaAlta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FechaBaja", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaBaja", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FechaBaja", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaBaja", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoTerritorio", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoTerritorio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoMonedaBase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBase", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoMonedaBaseAnterior", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoMonedaBaseAnterior", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoBanco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoBanco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoOficina", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoOficina", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IBAN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IBAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarcaAdeudo", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarcaAdeudo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LetrasEtiqueta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LetrasEtiqueta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoRegistroPublico", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroPublico", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegistroMercantil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumTomo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumTomo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumLibro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumSeccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumSeccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumFolio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumFolio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumHojaLibro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumHojaLibro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NumInscripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumInscripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "%ProrrataGeneral", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReferenciaEdi_", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReferenciaEdi_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdTipoPersona", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdTipoPersona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SociedadMercantil", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SociedadMercantil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmpresaEstimaciones", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmpresaEstimaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoEmpresaSinc", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoEmpresaSinc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sincronizacion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sincronizacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TipoRegistroNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoRegistroNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoRegistroMercantil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoRegistroMercantil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IdEmpresa", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IdEmpresa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodigoLEI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoLEI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SectoresDiferenciados", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SectoresDiferenciados", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AppInv.Properties.Settings.Default.ZthotelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CodigoEmpresa, TipoEmpresa, MarcaEmpresaPersona, Empresa, NombrePersona, PrimerApellido, SegundoApellido, Anagrama, SiglaNacion, CifDni, CifEuropeo, CifEspanol, FechaAlta, FechaBaja, CodigoTerritorio, CodigoMonedaBase, CodigoMonedaBaseAnterior, CodigoBanco, CodigoOficina, DC, CCC, IBAN, MarcaAdeudo, LetrasEtiqueta, TipoRegistroPublico, RegistroMercantil, NumTomo, NumLibro, NumSeccion, NumFolio, NumHojaLibro, NumInscripcion, [%ProrrataGeneral], ReferenciaEdi_, IdTipoPersona, SociedadMercantil, EmpresaEstimaciones, TipoEmpresaSinc, Sincronizacion, TipoRegistroNum, CodigoRegistroMercantil, IdEmpresa, CodigoLEI, SectoresDiferenciados FROM dbo.Empresas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ZthotelDataSet7.EmpresasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ZthotelDataSet7.EmpresasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ZthotelDataSet7.EmpresasDataTable dataTable = new ZthotelDataSet7.EmpresasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ZthotelDataSet7.EmpresasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ZthotelDataSet7 dataSet) {
            return this.Adapter.Update(dataSet, "Empresas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    short Original_CodigoEmpresa, 
                    byte Original_TipoEmpresa, 
                    string Original_MarcaEmpresaPersona, 
                    string Original_Empresa, 
                    string Original_NombrePersona, 
                    string Original_PrimerApellido, 
                    string Original_SegundoApellido, 
                    string Original_Anagrama, 
                    string Original_SiglaNacion, 
                    string Original_CifDni, 
                    string Original_CifEuropeo, 
                    string Original_CifEspanol, 
                    global::System.Nullable<global::System.DateTime> Original_FechaAlta, 
                    global::System.Nullable<global::System.DateTime> Original_FechaBaja, 
                    short Original_CodigoTerritorio, 
                    string Original_CodigoMonedaBase, 
                    string Original_CodigoMonedaBaseAnterior, 
                    string Original_CodigoBanco, 
                    string Original_CodigoOficina, 
                    string Original_DC, 
                    string Original_CCC, 
                    string Original_IBAN, 
                    short Original_MarcaAdeudo, 
                    string Original_LetrasEtiqueta, 
                    string Original_TipoRegistroPublico, 
                    string Original_RegistroMercantil, 
                    string Original_NumTomo, 
                    string Original_NumLibro, 
                    string Original_NumSeccion, 
                    string Original_NumFolio, 
                    string Original_NumHojaLibro, 
                    string Original_NumInscripcion, 
                    decimal p2, 
                    string Original_ReferenciaEdi_, 
                    short Original_IdTipoPersona, 
                    short Original_SociedadMercantil, 
                    short Original_EmpresaEstimaciones, 
                    short Original_TipoEmpresaSinc, 
                    short Original_Sincronizacion, 
                    short Original_TipoRegistroNum, 
                    string Original_CodigoRegistroMercantil, 
                    System.Guid Original_IdEmpresa, 
                    string Original_CodigoLEI, 
                    short Original_SectoresDiferenciados) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_CodigoEmpresa));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((byte)(Original_TipoEmpresa));
            if ((Original_MarcaEmpresaPersona == null)) {
                throw new global::System.ArgumentNullException("Original_MarcaEmpresaPersona");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MarcaEmpresaPersona));
            }
            if ((Original_Empresa == null)) {
                throw new global::System.ArgumentNullException("Original_Empresa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Empresa));
            }
            if ((Original_NombrePersona == null)) {
                throw new global::System.ArgumentNullException("Original_NombrePersona");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NombrePersona));
            }
            if ((Original_PrimerApellido == null)) {
                throw new global::System.ArgumentNullException("Original_PrimerApellido");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PrimerApellido));
            }
            if ((Original_SegundoApellido == null)) {
                throw new global::System.ArgumentNullException("Original_SegundoApellido");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SegundoApellido));
            }
            if ((Original_Anagrama == null)) {
                throw new global::System.ArgumentNullException("Original_Anagrama");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Anagrama));
            }
            if ((Original_SiglaNacion == null)) {
                throw new global::System.ArgumentNullException("Original_SiglaNacion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SiglaNacion));
            }
            if ((Original_CifDni == null)) {
                throw new global::System.ArgumentNullException("Original_CifDni");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_CifDni));
            }
            if ((Original_CifEuropeo == null)) {
                throw new global::System.ArgumentNullException("Original_CifEuropeo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CifEuropeo));
            }
            if ((Original_CifEspanol == null)) {
                throw new global::System.ArgumentNullException("Original_CifEspanol");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CifEspanol));
            }
            if ((Original_FechaAlta.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_FechaAlta.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_FechaBaja.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_FechaBaja.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_CodigoTerritorio));
            if ((Original_CodigoMonedaBase == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoMonedaBase");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_CodigoMonedaBase));
            }
            if ((Original_CodigoMonedaBaseAnterior == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoMonedaBaseAnterior");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_CodigoMonedaBaseAnterior));
            }
            if ((Original_CodigoBanco == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoBanco");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_CodigoBanco));
            }
            if ((Original_CodigoOficina == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoOficina");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_CodigoOficina));
            }
            if ((Original_DC == null)) {
                throw new global::System.ArgumentNullException("Original_DC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_DC));
            }
            if ((Original_CCC == null)) {
                throw new global::System.ArgumentNullException("Original_CCC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CCC));
            }
            if ((Original_IBAN == null)) {
                throw new global::System.ArgumentNullException("Original_IBAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_IBAN));
            }
            this.Adapter.DeleteCommand.Parameters[24].Value = ((short)(Original_MarcaAdeudo));
            if ((Original_LetrasEtiqueta == null)) {
                throw new global::System.ArgumentNullException("Original_LetrasEtiqueta");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_LetrasEtiqueta));
            }
            if ((Original_TipoRegistroPublico == null)) {
                throw new global::System.ArgumentNullException("Original_TipoRegistroPublico");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_TipoRegistroPublico));
            }
            if ((Original_RegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("Original_RegistroMercantil");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_RegistroMercantil));
            }
            if ((Original_NumTomo == null)) {
                throw new global::System.ArgumentNullException("Original_NumTomo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_NumTomo));
            }
            if ((Original_NumLibro == null)) {
                throw new global::System.ArgumentNullException("Original_NumLibro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_NumLibro));
            }
            if ((Original_NumSeccion == null)) {
                throw new global::System.ArgumentNullException("Original_NumSeccion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_NumSeccion));
            }
            if ((Original_NumFolio == null)) {
                throw new global::System.ArgumentNullException("Original_NumFolio");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_NumFolio));
            }
            if ((Original_NumHojaLibro == null)) {
                throw new global::System.ArgumentNullException("Original_NumHojaLibro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_NumHojaLibro));
            }
            if ((Original_NumInscripcion == null)) {
                throw new global::System.ArgumentNullException("Original_NumInscripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_NumInscripcion));
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(p2));
            if ((Original_ReferenciaEdi_ == null)) {
                throw new global::System.ArgumentNullException("Original_ReferenciaEdi_");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_ReferenciaEdi_));
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_IdTipoPersona));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((short)(Original_SociedadMercantil));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((short)(Original_EmpresaEstimaciones));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((short)(Original_TipoEmpresaSinc));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((short)(Original_Sincronizacion));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((short)(Original_TipoRegistroNum));
            if ((Original_CodigoRegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoRegistroMercantil");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_CodigoRegistroMercantil));
            }
            this.Adapter.DeleteCommand.Parameters[43].Value = ((System.Guid)(Original_IdEmpresa));
            if ((Original_CodigoLEI == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoLEI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_CodigoLEI));
            }
            this.Adapter.DeleteCommand.Parameters[45].Value = ((short)(Original_SectoresDiferenciados));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    short CodigoEmpresa, 
                    byte TipoEmpresa, 
                    string MarcaEmpresaPersona, 
                    string Empresa, 
                    string NombrePersona, 
                    string PrimerApellido, 
                    string SegundoApellido, 
                    string Anagrama, 
                    string SiglaNacion, 
                    string CifDni, 
                    string CifEuropeo, 
                    string CifEspanol, 
                    global::System.Nullable<global::System.DateTime> FechaAlta, 
                    global::System.Nullable<global::System.DateTime> FechaBaja, 
                    short CodigoTerritorio, 
                    string CodigoMonedaBase, 
                    string CodigoMonedaBaseAnterior, 
                    string CodigoBanco, 
                    string CodigoOficina, 
                    string DC, 
                    string CCC, 
                    string IBAN, 
                    short MarcaAdeudo, 
                    string LetrasEtiqueta, 
                    string TipoRegistroPublico, 
                    string RegistroMercantil, 
                    string NumTomo, 
                    string NumLibro, 
                    string NumSeccion, 
                    string NumFolio, 
                    string NumHojaLibro, 
                    string NumInscripcion, 
                    decimal p1, 
                    string ReferenciaEdi_, 
                    short IdTipoPersona, 
                    short SociedadMercantil, 
                    short EmpresaEstimaciones, 
                    short TipoEmpresaSinc, 
                    short Sincronizacion, 
                    short TipoRegistroNum, 
                    string CodigoRegistroMercantil, 
                    System.Guid IdEmpresa, 
                    string CodigoLEI, 
                    short SectoresDiferenciados) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(CodigoEmpresa));
            this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(TipoEmpresa));
            if ((MarcaEmpresaPersona == null)) {
                throw new global::System.ArgumentNullException("MarcaEmpresaPersona");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MarcaEmpresaPersona));
            }
            if ((Empresa == null)) {
                throw new global::System.ArgumentNullException("Empresa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Empresa));
            }
            if ((NombrePersona == null)) {
                throw new global::System.ArgumentNullException("NombrePersona");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NombrePersona));
            }
            if ((PrimerApellido == null)) {
                throw new global::System.ArgumentNullException("PrimerApellido");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PrimerApellido));
            }
            if ((SegundoApellido == null)) {
                throw new global::System.ArgumentNullException("SegundoApellido");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SegundoApellido));
            }
            if ((Anagrama == null)) {
                throw new global::System.ArgumentNullException("Anagrama");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Anagrama));
            }
            if ((SiglaNacion == null)) {
                throw new global::System.ArgumentNullException("SiglaNacion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SiglaNacion));
            }
            if ((CifDni == null)) {
                throw new global::System.ArgumentNullException("CifDni");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CifDni));
            }
            if ((CifEuropeo == null)) {
                throw new global::System.ArgumentNullException("CifEuropeo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CifEuropeo));
            }
            if ((CifEspanol == null)) {
                throw new global::System.ArgumentNullException("CifEspanol");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CifEspanol));
            }
            if ((FechaAlta.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(FechaAlta.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FechaBaja.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(FechaBaja.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((short)(CodigoTerritorio));
            if ((CodigoMonedaBase == null)) {
                throw new global::System.ArgumentNullException("CodigoMonedaBase");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CodigoMonedaBase));
            }
            if ((CodigoMonedaBaseAnterior == null)) {
                throw new global::System.ArgumentNullException("CodigoMonedaBaseAnterior");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(CodigoMonedaBaseAnterior));
            }
            if ((CodigoBanco == null)) {
                throw new global::System.ArgumentNullException("CodigoBanco");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(CodigoBanco));
            }
            if ((CodigoOficina == null)) {
                throw new global::System.ArgumentNullException("CodigoOficina");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(CodigoOficina));
            }
            if ((DC == null)) {
                throw new global::System.ArgumentNullException("DC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(DC));
            }
            if ((CCC == null)) {
                throw new global::System.ArgumentNullException("CCC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(CCC));
            }
            if ((IBAN == null)) {
                throw new global::System.ArgumentNullException("IBAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(IBAN));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((short)(MarcaAdeudo));
            if ((LetrasEtiqueta == null)) {
                throw new global::System.ArgumentNullException("LetrasEtiqueta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(LetrasEtiqueta));
            }
            if ((TipoRegistroPublico == null)) {
                throw new global::System.ArgumentNullException("TipoRegistroPublico");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(TipoRegistroPublico));
            }
            if ((RegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("RegistroMercantil");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(RegistroMercantil));
            }
            if ((NumTomo == null)) {
                throw new global::System.ArgumentNullException("NumTomo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(NumTomo));
            }
            if ((NumLibro == null)) {
                throw new global::System.ArgumentNullException("NumLibro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(NumLibro));
            }
            if ((NumSeccion == null)) {
                throw new global::System.ArgumentNullException("NumSeccion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(NumSeccion));
            }
            if ((NumFolio == null)) {
                throw new global::System.ArgumentNullException("NumFolio");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(NumFolio));
            }
            if ((NumHojaLibro == null)) {
                throw new global::System.ArgumentNullException("NumHojaLibro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(NumHojaLibro));
            }
            if ((NumInscripcion == null)) {
                throw new global::System.ArgumentNullException("NumInscripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(NumInscripcion));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(p1));
            if ((ReferenciaEdi_ == null)) {
                throw new global::System.ArgumentNullException("ReferenciaEdi_");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ReferenciaEdi_));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((short)(IdTipoPersona));
            this.Adapter.InsertCommand.Parameters[35].Value = ((short)(SociedadMercantil));
            this.Adapter.InsertCommand.Parameters[36].Value = ((short)(EmpresaEstimaciones));
            this.Adapter.InsertCommand.Parameters[37].Value = ((short)(TipoEmpresaSinc));
            this.Adapter.InsertCommand.Parameters[38].Value = ((short)(Sincronizacion));
            this.Adapter.InsertCommand.Parameters[39].Value = ((short)(TipoRegistroNum));
            if ((CodigoRegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("CodigoRegistroMercantil");
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(CodigoRegistroMercantil));
            }
            this.Adapter.InsertCommand.Parameters[41].Value = ((System.Guid)(IdEmpresa));
            if ((CodigoLEI == null)) {
                throw new global::System.ArgumentNullException("CodigoLEI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(CodigoLEI));
            }
            this.Adapter.InsertCommand.Parameters[43].Value = ((short)(SectoresDiferenciados));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short CodigoEmpresa, 
                    byte TipoEmpresa, 
                    string MarcaEmpresaPersona, 
                    string Empresa, 
                    string NombrePersona, 
                    string PrimerApellido, 
                    string SegundoApellido, 
                    string Anagrama, 
                    string SiglaNacion, 
                    string CifDni, 
                    string CifEuropeo, 
                    string CifEspanol, 
                    global::System.Nullable<global::System.DateTime> FechaAlta, 
                    global::System.Nullable<global::System.DateTime> FechaBaja, 
                    short CodigoTerritorio, 
                    string CodigoMonedaBase, 
                    string CodigoMonedaBaseAnterior, 
                    string CodigoBanco, 
                    string CodigoOficina, 
                    string DC, 
                    string CCC, 
                    string IBAN, 
                    short MarcaAdeudo, 
                    string LetrasEtiqueta, 
                    string TipoRegistroPublico, 
                    string RegistroMercantil, 
                    string NumTomo, 
                    string NumLibro, 
                    string NumSeccion, 
                    string NumFolio, 
                    string NumHojaLibro, 
                    string NumInscripcion, 
                    decimal p1, 
                    string ReferenciaEdi_, 
                    short IdTipoPersona, 
                    short SociedadMercantil, 
                    short EmpresaEstimaciones, 
                    short TipoEmpresaSinc, 
                    short Sincronizacion, 
                    short TipoRegistroNum, 
                    string CodigoRegistroMercantil, 
                    System.Guid IdEmpresa, 
                    string CodigoLEI, 
                    short SectoresDiferenciados, 
                    short Original_CodigoEmpresa, 
                    byte Original_TipoEmpresa, 
                    string Original_MarcaEmpresaPersona, 
                    string Original_Empresa, 
                    string Original_NombrePersona, 
                    string Original_PrimerApellido, 
                    string Original_SegundoApellido, 
                    string Original_Anagrama, 
                    string Original_SiglaNacion, 
                    string Original_CifDni, 
                    string Original_CifEuropeo, 
                    string Original_CifEspanol, 
                    global::System.Nullable<global::System.DateTime> Original_FechaAlta, 
                    global::System.Nullable<global::System.DateTime> Original_FechaBaja, 
                    short Original_CodigoTerritorio, 
                    string Original_CodigoMonedaBase, 
                    string Original_CodigoMonedaBaseAnterior, 
                    string Original_CodigoBanco, 
                    string Original_CodigoOficina, 
                    string Original_DC, 
                    string Original_CCC, 
                    string Original_IBAN, 
                    short Original_MarcaAdeudo, 
                    string Original_LetrasEtiqueta, 
                    string Original_TipoRegistroPublico, 
                    string Original_RegistroMercantil, 
                    string Original_NumTomo, 
                    string Original_NumLibro, 
                    string Original_NumSeccion, 
                    string Original_NumFolio, 
                    string Original_NumHojaLibro, 
                    string Original_NumInscripcion, 
                    decimal p2, 
                    string Original_ReferenciaEdi_, 
                    short Original_IdTipoPersona, 
                    short Original_SociedadMercantil, 
                    short Original_EmpresaEstimaciones, 
                    short Original_TipoEmpresaSinc, 
                    short Original_Sincronizacion, 
                    short Original_TipoRegistroNum, 
                    string Original_CodigoRegistroMercantil, 
                    System.Guid Original_IdEmpresa, 
                    string Original_CodigoLEI, 
                    short Original_SectoresDiferenciados) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(CodigoEmpresa));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(TipoEmpresa));
            if ((MarcaEmpresaPersona == null)) {
                throw new global::System.ArgumentNullException("MarcaEmpresaPersona");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MarcaEmpresaPersona));
            }
            if ((Empresa == null)) {
                throw new global::System.ArgumentNullException("Empresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Empresa));
            }
            if ((NombrePersona == null)) {
                throw new global::System.ArgumentNullException("NombrePersona");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NombrePersona));
            }
            if ((PrimerApellido == null)) {
                throw new global::System.ArgumentNullException("PrimerApellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PrimerApellido));
            }
            if ((SegundoApellido == null)) {
                throw new global::System.ArgumentNullException("SegundoApellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SegundoApellido));
            }
            if ((Anagrama == null)) {
                throw new global::System.ArgumentNullException("Anagrama");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Anagrama));
            }
            if ((SiglaNacion == null)) {
                throw new global::System.ArgumentNullException("SiglaNacion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SiglaNacion));
            }
            if ((CifDni == null)) {
                throw new global::System.ArgumentNullException("CifDni");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CifDni));
            }
            if ((CifEuropeo == null)) {
                throw new global::System.ArgumentNullException("CifEuropeo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CifEuropeo));
            }
            if ((CifEspanol == null)) {
                throw new global::System.ArgumentNullException("CifEspanol");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CifEspanol));
            }
            if ((FechaAlta.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(FechaAlta.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((FechaBaja.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(FechaBaja.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(CodigoTerritorio));
            if ((CodigoMonedaBase == null)) {
                throw new global::System.ArgumentNullException("CodigoMonedaBase");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CodigoMonedaBase));
            }
            if ((CodigoMonedaBaseAnterior == null)) {
                throw new global::System.ArgumentNullException("CodigoMonedaBaseAnterior");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(CodigoMonedaBaseAnterior));
            }
            if ((CodigoBanco == null)) {
                throw new global::System.ArgumentNullException("CodigoBanco");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(CodigoBanco));
            }
            if ((CodigoOficina == null)) {
                throw new global::System.ArgumentNullException("CodigoOficina");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(CodigoOficina));
            }
            if ((DC == null)) {
                throw new global::System.ArgumentNullException("DC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(DC));
            }
            if ((CCC == null)) {
                throw new global::System.ArgumentNullException("CCC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(CCC));
            }
            if ((IBAN == null)) {
                throw new global::System.ArgumentNullException("IBAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(IBAN));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(MarcaAdeudo));
            if ((LetrasEtiqueta == null)) {
                throw new global::System.ArgumentNullException("LetrasEtiqueta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(LetrasEtiqueta));
            }
            if ((TipoRegistroPublico == null)) {
                throw new global::System.ArgumentNullException("TipoRegistroPublico");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(TipoRegistroPublico));
            }
            if ((RegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("RegistroMercantil");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(RegistroMercantil));
            }
            if ((NumTomo == null)) {
                throw new global::System.ArgumentNullException("NumTomo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(NumTomo));
            }
            if ((NumLibro == null)) {
                throw new global::System.ArgumentNullException("NumLibro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(NumLibro));
            }
            if ((NumSeccion == null)) {
                throw new global::System.ArgumentNullException("NumSeccion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(NumSeccion));
            }
            if ((NumFolio == null)) {
                throw new global::System.ArgumentNullException("NumFolio");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(NumFolio));
            }
            if ((NumHojaLibro == null)) {
                throw new global::System.ArgumentNullException("NumHojaLibro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(NumHojaLibro));
            }
            if ((NumInscripcion == null)) {
                throw new global::System.ArgumentNullException("NumInscripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(NumInscripcion));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(p1));
            if ((ReferenciaEdi_ == null)) {
                throw new global::System.ArgumentNullException("ReferenciaEdi_");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(ReferenciaEdi_));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((short)(IdTipoPersona));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((short)(SociedadMercantil));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((short)(EmpresaEstimaciones));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(TipoEmpresaSinc));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((short)(Sincronizacion));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(TipoRegistroNum));
            if ((CodigoRegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("CodigoRegistroMercantil");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(CodigoRegistroMercantil));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((System.Guid)(IdEmpresa));
            if ((CodigoLEI == null)) {
                throw new global::System.ArgumentNullException("CodigoLEI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(CodigoLEI));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((short)(SectoresDiferenciados));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((short)(Original_CodigoEmpresa));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((byte)(Original_TipoEmpresa));
            if ((Original_MarcaEmpresaPersona == null)) {
                throw new global::System.ArgumentNullException("Original_MarcaEmpresaPersona");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_MarcaEmpresaPersona));
            }
            if ((Original_Empresa == null)) {
                throw new global::System.ArgumentNullException("Original_Empresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Empresa));
            }
            if ((Original_NombrePersona == null)) {
                throw new global::System.ArgumentNullException("Original_NombrePersona");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_NombrePersona));
            }
            if ((Original_PrimerApellido == null)) {
                throw new global::System.ArgumentNullException("Original_PrimerApellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_PrimerApellido));
            }
            if ((Original_SegundoApellido == null)) {
                throw new global::System.ArgumentNullException("Original_SegundoApellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_SegundoApellido));
            }
            if ((Original_Anagrama == null)) {
                throw new global::System.ArgumentNullException("Original_Anagrama");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_Anagrama));
            }
            if ((Original_SiglaNacion == null)) {
                throw new global::System.ArgumentNullException("Original_SiglaNacion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_SiglaNacion));
            }
            if ((Original_CifDni == null)) {
                throw new global::System.ArgumentNullException("Original_CifDni");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_CifDni));
            }
            if ((Original_CifEuropeo == null)) {
                throw new global::System.ArgumentNullException("Original_CifEuropeo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_CifEuropeo));
            }
            if ((Original_CifEspanol == null)) {
                throw new global::System.ArgumentNullException("Original_CifEspanol");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_CifEspanol));
            }
            if ((Original_FechaAlta.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_FechaAlta.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_FechaBaja.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_FechaBaja.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((short)(Original_CodigoTerritorio));
            if ((Original_CodigoMonedaBase == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoMonedaBase");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_CodigoMonedaBase));
            }
            if ((Original_CodigoMonedaBaseAnterior == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoMonedaBaseAnterior");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_CodigoMonedaBaseAnterior));
            }
            if ((Original_CodigoBanco == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoBanco");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_CodigoBanco));
            }
            if ((Original_CodigoOficina == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoOficina");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_CodigoOficina));
            }
            if ((Original_DC == null)) {
                throw new global::System.ArgumentNullException("Original_DC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_DC));
            }
            if ((Original_CCC == null)) {
                throw new global::System.ArgumentNullException("Original_CCC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_CCC));
            }
            if ((Original_IBAN == null)) {
                throw new global::System.ArgumentNullException("Original_IBAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_IBAN));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((short)(Original_MarcaAdeudo));
            if ((Original_LetrasEtiqueta == null)) {
                throw new global::System.ArgumentNullException("Original_LetrasEtiqueta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_LetrasEtiqueta));
            }
            if ((Original_TipoRegistroPublico == null)) {
                throw new global::System.ArgumentNullException("Original_TipoRegistroPublico");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_TipoRegistroPublico));
            }
            if ((Original_RegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("Original_RegistroMercantil");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_RegistroMercantil));
            }
            if ((Original_NumTomo == null)) {
                throw new global::System.ArgumentNullException("Original_NumTomo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_NumTomo));
            }
            if ((Original_NumLibro == null)) {
                throw new global::System.ArgumentNullException("Original_NumLibro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_NumLibro));
            }
            if ((Original_NumSeccion == null)) {
                throw new global::System.ArgumentNullException("Original_NumSeccion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_NumSeccion));
            }
            if ((Original_NumFolio == null)) {
                throw new global::System.ArgumentNullException("Original_NumFolio");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_NumFolio));
            }
            if ((Original_NumHojaLibro == null)) {
                throw new global::System.ArgumentNullException("Original_NumHojaLibro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_NumHojaLibro));
            }
            if ((Original_NumInscripcion == null)) {
                throw new global::System.ArgumentNullException("Original_NumInscripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(Original_NumInscripcion));
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(p2));
            if ((Original_ReferenciaEdi_ == null)) {
                throw new global::System.ArgumentNullException("Original_ReferenciaEdi_");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_ReferenciaEdi_));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((short)(Original_IdTipoPersona));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((short)(Original_SociedadMercantil));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((short)(Original_EmpresaEstimaciones));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((short)(Original_TipoEmpresaSinc));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((short)(Original_Sincronizacion));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((short)(Original_TipoRegistroNum));
            if ((Original_CodigoRegistroMercantil == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoRegistroMercantil");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_CodigoRegistroMercantil));
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((System.Guid)(Original_IdEmpresa));
            if ((Original_CodigoLEI == null)) {
                throw new global::System.ArgumentNullException("Original_CodigoLEI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_CodigoLEI));
            }
            this.Adapter.UpdateCommand.Parameters[89].Value = ((short)(Original_SectoresDiferenciados));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte TipoEmpresa, 
                    string MarcaEmpresaPersona, 
                    string Empresa, 
                    string NombrePersona, 
                    string PrimerApellido, 
                    string SegundoApellido, 
                    string Anagrama, 
                    string SiglaNacion, 
                    string CifDni, 
                    string CifEuropeo, 
                    string CifEspanol, 
                    global::System.Nullable<global::System.DateTime> FechaAlta, 
                    global::System.Nullable<global::System.DateTime> FechaBaja, 
                    short CodigoTerritorio, 
                    string CodigoMonedaBase, 
                    string CodigoMonedaBaseAnterior, 
                    string CodigoBanco, 
                    string CodigoOficina, 
                    string DC, 
                    string CCC, 
                    string IBAN, 
                    short MarcaAdeudo, 
                    string LetrasEtiqueta, 
                    string TipoRegistroPublico, 
                    string RegistroMercantil, 
                    string NumTomo, 
                    string NumLibro, 
                    string NumSeccion, 
                    string NumFolio, 
                    string NumHojaLibro, 
                    string NumInscripcion, 
                    decimal p1, 
                    string ReferenciaEdi_, 
                    short IdTipoPersona, 
                    short SociedadMercantil, 
                    short EmpresaEstimaciones, 
                    short TipoEmpresaSinc, 
                    short Sincronizacion, 
                    short TipoRegistroNum, 
                    string CodigoRegistroMercantil, 
                    System.Guid IdEmpresa, 
                    string CodigoLEI, 
                    short SectoresDiferenciados, 
                    short Original_CodigoEmpresa, 
                    byte Original_TipoEmpresa, 
                    string Original_MarcaEmpresaPersona, 
                    string Original_Empresa, 
                    string Original_NombrePersona, 
                    string Original_PrimerApellido, 
                    string Original_SegundoApellido, 
                    string Original_Anagrama, 
                    string Original_SiglaNacion, 
                    string Original_CifDni, 
                    string Original_CifEuropeo, 
                    string Original_CifEspanol, 
                    global::System.Nullable<global::System.DateTime> Original_FechaAlta, 
                    global::System.Nullable<global::System.DateTime> Original_FechaBaja, 
                    short Original_CodigoTerritorio, 
                    string Original_CodigoMonedaBase, 
                    string Original_CodigoMonedaBaseAnterior, 
                    string Original_CodigoBanco, 
                    string Original_CodigoOficina, 
                    string Original_DC, 
                    string Original_CCC, 
                    string Original_IBAN, 
                    short Original_MarcaAdeudo, 
                    string Original_LetrasEtiqueta, 
                    string Original_TipoRegistroPublico, 
                    string Original_RegistroMercantil, 
                    string Original_NumTomo, 
                    string Original_NumLibro, 
                    string Original_NumSeccion, 
                    string Original_NumFolio, 
                    string Original_NumHojaLibro, 
                    string Original_NumInscripcion, 
                    decimal p2, 
                    string Original_ReferenciaEdi_, 
                    short Original_IdTipoPersona, 
                    short Original_SociedadMercantil, 
                    short Original_EmpresaEstimaciones, 
                    short Original_TipoEmpresaSinc, 
                    short Original_Sincronizacion, 
                    short Original_TipoRegistroNum, 
                    string Original_CodigoRegistroMercantil, 
                    System.Guid Original_IdEmpresa, 
                    string Original_CodigoLEI, 
                    short Original_SectoresDiferenciados) {
            return this.Update(Original_CodigoEmpresa, TipoEmpresa, MarcaEmpresaPersona, Empresa, NombrePersona, PrimerApellido, SegundoApellido, Anagrama, SiglaNacion, CifDni, CifEuropeo, CifEspanol, FechaAlta, FechaBaja, CodigoTerritorio, CodigoMonedaBase, CodigoMonedaBaseAnterior, CodigoBanco, CodigoOficina, DC, CCC, IBAN, MarcaAdeudo, LetrasEtiqueta, TipoRegistroPublico, RegistroMercantil, NumTomo, NumLibro, NumSeccion, NumFolio, NumHojaLibro, NumInscripcion, p1, ReferenciaEdi_, IdTipoPersona, SociedadMercantil, EmpresaEstimaciones, TipoEmpresaSinc, Sincronizacion, TipoRegistroNum, CodigoRegistroMercantil, IdEmpresa, CodigoLEI, SectoresDiferenciados, Original_CodigoEmpresa, Original_TipoEmpresa, Original_MarcaEmpresaPersona, Original_Empresa, Original_NombrePersona, Original_PrimerApellido, Original_SegundoApellido, Original_Anagrama, Original_SiglaNacion, Original_CifDni, Original_CifEuropeo, Original_CifEspanol, Original_FechaAlta, Original_FechaBaja, Original_CodigoTerritorio, Original_CodigoMonedaBase, Original_CodigoMonedaBaseAnterior, Original_CodigoBanco, Original_CodigoOficina, Original_DC, Original_CCC, Original_IBAN, Original_MarcaAdeudo, Original_LetrasEtiqueta, Original_TipoRegistroPublico, Original_RegistroMercantil, Original_NumTomo, Original_NumLibro, Original_NumSeccion, Original_NumFolio, Original_NumHojaLibro, Original_NumInscripcion, p2, Original_ReferenciaEdi_, Original_IdTipoPersona, Original_SociedadMercantil, Original_EmpresaEstimaciones, Original_TipoEmpresaSinc, Original_Sincronizacion, Original_TipoRegistroNum, Original_CodigoRegistroMercantil, Original_IdEmpresa, Original_CodigoLEI, Original_SectoresDiferenciados);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InventariosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public InventariosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Inventarios";
            tableMapping.ColumnMappings.Add("CodigoEmpresa", "CodigoEmpresa");
            tableMapping.ColumnMappings.Add("Inventario", "Inventario");
            tableMapping.ColumnMappings.Add("CodigoArticulo", "CodigoArticulo");
            tableMapping.ColumnMappings.Add("Partida", "Partida");
            tableMapping.ColumnMappings.Add("CodigoAlmacen", "CodigoAlmacen");
            tableMapping.ColumnMappings.Add("TipoUnidadMedida_", "TipoUnidadMedida_");
            tableMapping.ColumnMappings.Add("PrecioMedio", "PrecioMedio");
            tableMapping.ColumnMappings.Add("FechaCreacion", "FechaCreacion");
            tableMapping.ColumnMappings.Add("PrecioNuevo", "PrecioNuevo");
            tableMapping.ColumnMappings.Add("FechaCaducidad", "FechaCaducidad");
            tableMapping.ColumnMappings.Add("PrecioNuevo1_", "PrecioNuevo1_");
            tableMapping.ColumnMappings.Add("PrecioMedio1_", "PrecioMedio1_");
            tableMapping.ColumnMappings.Add("DescripcionArticulo", "DescripcionArticulo");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Inventarios] ([CodigoEmpresa], [Inventario], [CodigoArticulo], [Partida], [CodigoAlmacen], [TipoUnidadMedida_], [PrecioMedio], [FechaCreacion], [PrecioNuevo], [FechaCaducidad], [PrecioNuevo1_], [PrecioMedio1_], [DescripcionArticulo], [Fecha]) VALUES (@CodigoEmpresa, @Inventario, @CodigoArticulo, @Partida, @CodigoAlmacen, @TipoUnidadMedida_, @PrecioMedio, @FechaCreacion, @PrecioNuevo, @FechaCaducidad, @PrecioNuevo1_, @PrecioMedio1_, @DescripcionArticulo, @Fecha)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoEmpresa", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpresa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inventario", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inventario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoArticulo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoArticulo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partida", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partida", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodigoAlmacen", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodigoAlmacen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TipoUnidadMedida_", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TipoUnidadMedida_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrecioMedio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "PrecioMedio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaCreacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaCreacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrecioNuevo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "PrecioNuevo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FechaCaducidad", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FechaCaducidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrecioNuevo1_", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "PrecioNuevo1_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrecioMedio1_", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 28, 10, "PrecioMedio1_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DescripcionArticulo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DescripcionArticulo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AppInv.Properties.Settings.Default.ZthotelConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CodigoEmpresa, Inventario, CodigoArticulo, Partida, CodigoAlmacen, TipoUni" +
                "dadMedida_, PrecioMedio, FechaCreacion, PrecioNuevo, FechaCaducidad, PrecioNuevo" +
                "1_, PrecioMedio1_, DescripcionArticulo, Fecha FROM dbo.Inventarios";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ZthotelDataSet7.InventariosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ZthotelDataSet7.InventariosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ZthotelDataSet7.InventariosDataTable dataTable = new ZthotelDataSet7.InventariosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ZthotelDataSet7.InventariosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ZthotelDataSet7 dataSet) {
            return this.Adapter.Update(dataSet, "Inventarios");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short CodigoEmpresa, string Inventario, string CodigoArticulo, string Partida, string CodigoAlmacen, string TipoUnidadMedida_, decimal PrecioMedio, System.DateTime FechaCreacion, decimal PrecioNuevo, global::System.Nullable<global::System.DateTime> FechaCaducidad, decimal PrecioNuevo1_, decimal PrecioMedio1_, string DescripcionArticulo, System.DateTime Fecha) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(CodigoEmpresa));
            if ((Inventario == null)) {
                throw new global::System.ArgumentNullException("Inventario");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Inventario));
            }
            if ((CodigoArticulo == null)) {
                throw new global::System.ArgumentNullException("CodigoArticulo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CodigoArticulo));
            }
            if ((Partida == null)) {
                throw new global::System.ArgumentNullException("Partida");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Partida));
            }
            if ((CodigoAlmacen == null)) {
                throw new global::System.ArgumentNullException("CodigoAlmacen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CodigoAlmacen));
            }
            if ((TipoUnidadMedida_ == null)) {
                throw new global::System.ArgumentNullException("TipoUnidadMedida_");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TipoUnidadMedida_));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PrecioMedio));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(FechaCreacion));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(PrecioNuevo));
            if ((FechaCaducidad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(FechaCaducidad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(PrecioNuevo1_));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(PrecioMedio1_));
            if ((DescripcionArticulo == null)) {
                throw new global::System.ArgumentNullException("DescripcionArticulo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(DescripcionArticulo));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Fecha));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EmpresasTableAdapter _empresasTableAdapter;
        
        private InventariosTableAdapter _inventariosTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EmpresasTableAdapter EmpresasTableAdapter {
            get {
                return this._empresasTableAdapter;
            }
            set {
                this._empresasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public InventariosTableAdapter InventariosTableAdapter {
            get {
                return this._inventariosTableAdapter;
            }
            set {
                this._inventariosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._empresasTableAdapter != null) 
                            && (this._empresasTableAdapter.Connection != null))) {
                    return this._empresasTableAdapter.Connection;
                }
                if (((this._inventariosTableAdapter != null) 
                            && (this._inventariosTableAdapter.Connection != null))) {
                    return this._inventariosTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._empresasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._inventariosTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(ZthotelDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._empresasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Empresas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._empresasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._inventariosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Inventarios.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._inventariosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(ZthotelDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._empresasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Empresas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._empresasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._inventariosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Inventarios.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._inventariosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(ZthotelDataSet7 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._inventariosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Inventarios.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._inventariosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._empresasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Empresas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._empresasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(ZthotelDataSet7 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._empresasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._empresasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._inventariosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._inventariosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._empresasTableAdapter != null)) {
                    revertConnections.Add(this._empresasTableAdapter, this._empresasTableAdapter.Connection);
                    this._empresasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._empresasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._empresasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._empresasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._empresasTableAdapter.Adapter);
                    }
                }
                if ((this._inventariosTableAdapter != null)) {
                    revertConnections.Add(this._inventariosTableAdapter, this._inventariosTableAdapter.Connection);
                    this._inventariosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._inventariosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._inventariosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._inventariosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._inventariosTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._empresasTableAdapter != null)) {
                    this._empresasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._empresasTableAdapter]));
                    this._empresasTableAdapter.Transaction = null;
                }
                if ((this._inventariosTableAdapter != null)) {
                    this._inventariosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._inventariosTableAdapter]));
                    this._inventariosTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591